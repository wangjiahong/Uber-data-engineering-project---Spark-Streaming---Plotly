{"version":3,"file":"d7e6088362904da1c4f0.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/match-sorter/dist/match-sorter.esm.js","webpack://superset/./node_modules/remove-accents/index.js","webpack://superset/./src/explore/exploreUtils/getParsedExploreURLParams.ts","webpack://superset/./src/components/CachedLabel/TooltipContent.tsx","webpack://superset/./src/components/CachedLabel/index.tsx","webpack://superset/./src/components/Timer/index.tsx","webpack://superset/./src/explore/components/ChartPills.tsx","webpack://superset/./src/explore/components/ExploreAlert.tsx","webpack://superset/./src/explore/components/ExploreChartPanel.jsx","webpack://superset/./src/explore/components/RunQueryButton/index.tsx","webpack://superset/./src/explore/components/ControlPanelsContainer.tsx","webpack://superset/./src/explore/components/SaveModal.tsx","webpack://superset/./src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx","webpack://superset/./src/explore/components/DatasourcePanel/index.tsx","webpack://superset/./src/utils/getControlsForVizType.js","webpack://superset/./src/components/AlteredSliceTag/index.jsx","webpack://superset/./src/explore/components/ExploreChartHeader/index.jsx","webpack://superset/./src/explore/components/ExploreViewContainer/index.jsx","webpack://superset/./src/explore/fixtures.tsx","webpack://superset/./src/explore/controlUtils/getFormDataWithDashboardContext.ts","webpack://superset/./src/explore/ExplorePage.tsx"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport removeAccents from 'remove-accents';\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 7,\n  EQUAL: 6,\n  STARTS_WITH: 5,\n  WORD_STARTS_WITH: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\nmatchSorter.rankings = rankings;\n\nvar defaultBaseSortFn = function defaultBaseSortFn(a, b) {\n  return String(a.rankedValue).localeCompare(String(b.rankedValue));\n};\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\n\n\nfunction matchSorter(items, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      keys = _options.keys,\n      _options$threshold = _options.threshold,\n      threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold,\n      _options$baseSort = _options.baseSort,\n      baseSort = _options$baseSort === void 0 ? defaultBaseSortFn : _options$baseSort,\n      _options$sorter = _options.sorter,\n      sorter = _options$sorter === void 0 ? function (matchedItems) {\n    return matchedItems.sort(function (a, b) {\n      return sortRankedValues(a, b, baseSort);\n    });\n  } : _options$sorter;\n  var matchedItems = items.reduce(reduceItemsToRanked, []);\n  return sorter(matchedItems).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n\n  function reduceItemsToRanked(matches, item, index) {\n    var rankingInfo = getHighestRanking(item, keys, value, options);\n    var rank = rankingInfo.rank,\n        _rankingInfo$keyThres = rankingInfo.keyThreshold,\n        keyThreshold = _rankingInfo$keyThres === void 0 ? threshold : _rankingInfo$keyThres;\n\n    if (rank >= keyThreshold) {\n      matches.push(_extends({}, rankingInfo, {\n        item: item,\n        index: index\n      }));\n    }\n\n    return matches;\n  }\n}\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\n\n\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    // if keys is not specified, then we assume the item given is ready to be matched\n    var stringItem = item;\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedValue: stringItem,\n      rank: getMatchRanking(stringItem, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        rankedValue = _ref2.rankedValue,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n    var newRank = getMatchRanking(itemValue, value, options);\n    var newRankedValue = rankedValue;\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n      newRankedValue = itemValue;\n    }\n\n    return {\n      rankedValue: newRankedValue,\n      rank: rank,\n      keyIndex: keyIndex,\n      keyThreshold: keyThreshold\n    };\n  }, {\n    rankedValue: item,\n    rank: rankings.NO_MATCH,\n    keyIndex: -1,\n    keyThreshold: options.threshold\n  });\n}\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\n\n\nfunction getMatchRanking(testString, stringToRank, options) {\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  } // case sensitive equals\n\n\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  } // Lower casing before further comparison\n\n\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n  if (testString === stringToRank) {\n    return rankings.EQUAL;\n  } // starts with\n\n\n  if (testString.startsWith(stringToRank)) {\n    return rankings.STARTS_WITH;\n  } // word starts with\n\n\n  if (testString.includes(\" \" + stringToRank)) {\n    return rankings.WORD_STARTS_WITH;\n  } // contains\n\n\n  if (testString.includes(stringToRank)) {\n    return rankings.CONTAINS;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  } // acronym\n\n\n  if (getAcronym(testString).includes(stringToRank)) {\n    return rankings.ACRONYM;\n  } // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n  return getClosenessRanking(testString, stringToRank);\n}\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\n\n\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\n\n\nfunction getClosenessRanking(testString, stringToRank) {\n  var matchingInOrderCharCount = 0;\n  var charNumber = 0;\n\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index, J = string.length; j < J; j++) {\n      var stringChar = string[j];\n\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  function getRanking(spread) {\n    var spreadPercentage = 1 / spread;\n    var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    var ranking = rankings.MATCHES + inOrderPercentage * spreadPercentage;\n    return ranking;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n\n  charNumber = firstIndex;\n\n  for (var i = 1, I = stringToRank.length; i < I; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n */\n\n\nfunction sortRankedValues(a, b, baseSort) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRank = a.rank,\n      aKeyIndex = a.keyIndex;\n  var bRank = b.rank,\n      bKeyIndex = b.keyIndex;\n  var same = aRank === bRank;\n\n  if (same) {\n    if (aKeyIndex === bKeyIndex) {\n      // use the base sort function as a tie-breaker\n      return baseSort(a, b);\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\n\n\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n  // value might not actually be a string at this point (we don't get to choose)\n  // so part of preparing the value for comparison is ensure that it is a string\n  value = \"\" + value; // toString\n\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n\n  return value;\n}\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\n\n\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key;\n  }\n\n  var value;\n\n  if (typeof key === 'function') {\n    value = key(item);\n  } else if (item == null) {\n    value = null;\n  } else if (Object.hasOwnProperty.call(item, key)) {\n    value = item[key];\n  } else if (key.includes('.')) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    return getNestedValues(key, item);\n  } else {\n    value = null;\n  } // because `value` can also be undefined\n\n\n  if (value == null) {\n    return [];\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return [String(value)];\n}\n/**\n * Given path: \"foo.bar.baz\"\n * And item: {foo: {bar: {baz: 'buzz'}}}\n *   -> 'buzz'\n * @param path a dot-separated set of keys\n * @param item the item to get the value from\n */\n\n\nfunction getNestedValues(path, item) {\n  var keys = path.split('.');\n  var values = [item];\n\n  for (var i = 0, I = keys.length; i < I; i++) {\n    var nestedKey = keys[i];\n    var nestedValues = [];\n\n    for (var j = 0, J = values.length; j < J; j++) {\n      var nestedItem = values[j];\n      if (nestedItem == null) continue;\n\n      if (Object.hasOwnProperty.call(nestedItem, nestedKey)) {\n        var nestedValue = nestedItem[nestedKey];\n\n        if (nestedValue != null) {\n          nestedValues.push(nestedValue);\n        }\n      } else if (nestedKey === '*') {\n        // ensure that values is an array\n        nestedValues = nestedValues.concat(nestedItem);\n      }\n    }\n\n    values = nestedValues;\n  }\n\n  if (Array.isArray(values[0])) {\n    // keep allowing the implicit wildcard for an array of strings at the end of\n    // the path; don't use `.flat()` because that's not available in node.js v10\n    var result = [];\n    return result.concat.apply(result, values);\n  } // Based on our logic it should be an array of strings by now...\n  // assuming the user's path terminated in strings\n\n\n  return values;\n}\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param item - the item from which the values will be retrieved\n * @param keys - the keys to use to retrieve the values\n * @return objects with {itemValue, attributes}\n */\n\n\nfunction getAllValuesToRank(item, keys) {\n  var allValues = [];\n\n  for (var j = 0, J = keys.length; j < J; j++) {\n    var key = keys[j];\n    var attributes = getKeyAttributes(key);\n    var itemValues = getItemValues(item, key);\n\n    for (var i = 0, I = itemValues.length; i < I; i++) {\n      allValues.push({\n        itemValue: itemValues[i],\n        attributes: attributes\n      });\n    }\n  }\n\n  return allValues;\n}\n\nvar defaultKeyAttributes = {\n  maxRanking: Infinity,\n  minRanking: -Infinity\n};\n/**\n * Gets all the attributes for the given key\n * @param key - the key from which the attributes will be retrieved\n * @return object containing the key's attributes\n */\n\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    return defaultKeyAttributes;\n  }\n\n  return _extends({}, defaultKeyAttributes, key);\n}\n/*\neslint\n  no-continue: \"off\",\n*/\n\nexport { defaultBaseSortFn, matchSorter, rankings };\n","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport interface Location {\n  search: string;\n  pathname: string;\n}\n\n// mapping { url_param: v1_explore_request_param }\nconst EXPLORE_URL_SEARCH_PARAMS = {\n  form_data: {\n    name: 'form_data',\n    parser: (formData: string) => {\n      const formDataObject = JSON.parse(formData);\n      if (formDataObject.datasource) {\n        const [datasource_id, datasource_type] =\n          formDataObject.datasource.split('__');\n        formDataObject.datasource_id = datasource_id;\n        formDataObject.datasource_type = datasource_type;\n        delete formDataObject.datasource;\n      }\n      return formDataObject;\n    },\n  },\n  slice_id: {\n    name: 'slice_id',\n  },\n  datasource_id: {\n    name: 'datasource_id',\n  },\n  datasource_type: {\n    name: 'datasource_type',\n  },\n  datasource: {\n    name: 'datasource',\n    parser: (datasource: string) => {\n      const [datasource_id, datasource_type] = datasource.split('__');\n      return { datasource_id, datasource_type };\n    },\n  },\n  form_data_key: {\n    name: 'form_data_key',\n  },\n  permalink_key: {\n    name: 'permalink_key',\n  },\n  viz_type: {\n    name: 'viz_type',\n  },\n  dashboard_id: {\n    name: 'dashboard_id',\n  },\n};\n\nconst EXPLORE_URL_PATH_PARAMS = {\n  p: 'permalink_key', // permalink\n  table: 'datasource_id',\n};\n\n// search params can be placed in form_data object\n// we need to \"flatten\" the search params to use them with /v1/explore endpoint\nconst getParsedExploreURLSearchParams = (search: string) => {\n  const urlSearchParams = new URLSearchParams(search);\n  return Array.from(urlSearchParams.keys()).reduce((acc, currentParam) => {\n    const paramValue = urlSearchParams.get(currentParam);\n    if (paramValue === null) {\n      return acc;\n    }\n    let parsedParamValue;\n    try {\n      parsedParamValue =\n        EXPLORE_URL_SEARCH_PARAMS[currentParam].parser?.(paramValue) ??\n        paramValue;\n    } catch {\n      parsedParamValue = paramValue;\n    }\n    if (typeof parsedParamValue === 'object') {\n      return { ...acc, ...parsedParamValue };\n    }\n    const key = EXPLORE_URL_SEARCH_PARAMS[currentParam]?.name || currentParam;\n    return {\n      ...acc,\n      [key]: parsedParamValue,\n    };\n  }, {});\n};\n\n// path params need to be transformed to search params to use them with /v1/explore endpoint\nconst getParsedExploreURLPathParams = (pathname: string) =>\n  Object.keys(EXPLORE_URL_PATH_PARAMS).reduce((acc, currentParam) => {\n    const re = new RegExp(`/(${currentParam})/(\\\\w+)`);\n    const pathGroups = pathname.match(re);\n    if (pathGroups?.[2]) {\n      return { ...acc, [EXPLORE_URL_PATH_PARAMS[currentParam]]: pathGroups[2] };\n    }\n    return acc;\n  }, {});\n\nexport const getParsedExploreURLParams = (\n  location: Location = window.location,\n) =>\n  new URLSearchParams(\n    Object.entries({\n      ...getParsedExploreURLSearchParams(location.search),\n      ...getParsedExploreURLPathParams(location.pathname),\n    })\n      .map(entry => entry.join('='))\n      .join('&'),\n  );\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport moment from 'moment';\nimport { t } from '@superset-ui/core';\n\ninterface Props {\n  cachedTimestamp?: string;\n}\nexport const TooltipContent: React.FC<Props> = ({ cachedTimestamp }) => {\n  const cachedText = cachedTimestamp ? (\n    <span>\n      {t('Loaded data cached')}\n      <b> {moment.utc(cachedTimestamp).fromNow()}</b>\n    </span>\n  ) : (\n    t('Loaded from cache')\n  );\n\n  return (\n    <span data-test=\"tooltip-content\">\n      {cachedText}. {t('Click to force-refresh')}\n    </span>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { TooltipContent } from './TooltipContent';\n\nexport interface CacheLabelProps {\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  cachedTimestamp?: string;\n  className?: string;\n}\n\nconst CacheLabel: React.FC<CacheLabelProps> = ({\n  className,\n  onClick,\n  cachedTimestamp,\n}) => {\n  const [hovered, setHovered] = useState(false);\n\n  const labelType = hovered ? 'primary' : 'default';\n  return (\n    <Tooltip\n      title={<TooltipContent cachedTimestamp={cachedTimestamp} />}\n      id=\"cache-desc-tooltip\"\n    >\n      <Label\n        className={`${className}`}\n        type={labelType}\n        onClick={onClick}\n        onMouseOver={() => setHovered(true)}\n        onMouseOut={() => setHovered(false)}\n      >\n        {t('Cached')} <i className=\"fa fa-refresh\" />\n      </Label>\n    </Tooltip>\n  );\n};\n\nexport default CacheLabel;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport Label, { Type } from 'src/components/Label';\n\nimport { now, fDuration } from 'src/utils/dates';\n\nexport interface TimerProps {\n  endTime?: number;\n  isRunning: boolean;\n  startTime?: number;\n  status?: Type;\n}\n\nconst TimerLabel = styled(Label)`\n  text-align: left;\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n`;\n\nexport default function Timer({\n  endTime,\n  isRunning,\n  startTime,\n  status = 'success',\n}: TimerProps) {\n  const [clockStr, setClockStr] = useState('00:00:00.00');\n  const timer = useRef<ReturnType<typeof setInterval>>();\n\n  useEffect(() => {\n    const stopTimer = () => {\n      if (timer.current) {\n        clearInterval(timer.current);\n        timer.current = undefined;\n      }\n    };\n\n    if (isRunning) {\n      timer.current = setInterval(() => {\n        if (startTime) {\n          const endDttm = endTime || now();\n          if (startTime < endDttm) {\n            setClockStr(fDuration(startTime, endDttm));\n          }\n          if (!isRunning) {\n            stopTimer();\n          }\n        }\n      }, 30);\n    }\n    return stopTimer;\n  }, [endTime, isRunning, startTime]);\n\n  return (\n    <TimerLabel type={status} role=\"timer\">\n      {clockStr}\n    </TimerLabel>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, RefObject } from 'react';\nimport { css, QueryData, SupersetTheme } from '@superset-ui/core';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';\nimport CachedLabel from 'src/components/CachedLabel';\nimport Timer from 'src/components/Timer';\n\nenum CHART_STATUS_MAP {\n  failed = 'danger',\n  loading = 'warning',\n  success = 'success',\n}\n\nexport type ChartPillsProps = {\n  queriesResponse: QueryData[];\n  chartStatus: keyof typeof CHART_STATUS_MAP;\n  chartUpdateStartTime: number;\n  chartUpdateEndTime: number;\n  refreshCachedQuery: () => void;\n  rowLimit: string | number;\n};\n\nexport const ChartPills = forwardRef(\n  (\n    {\n      queriesResponse,\n      chartStatus,\n      chartUpdateStartTime,\n      chartUpdateEndTime,\n      refreshCachedQuery,\n      rowLimit,\n    }: ChartPillsProps,\n    ref: RefObject<HTMLDivElement>,\n  ) => {\n    const isLoading = chartStatus === 'loading';\n    const firstQueryResponse = queriesResponse?.[0];\n    return (\n      <div ref={ref}>\n        <div\n          css={(theme: SupersetTheme) => css`\n            display: flex;\n            justify-content: flex-end;\n            padding-bottom: ${theme.gridUnit * 4}px;\n            & .ant-tag:last-of-type {\n              margin: 0;\n            }\n          `}\n        >\n          {!isLoading && firstQueryResponse && (\n            <RowCountLabel\n              rowcount={Number(firstQueryResponse.rowcount) || 0}\n              limit={Number(rowLimit) || 0}\n            />\n          )}\n          {!isLoading && firstQueryResponse?.is_cached && (\n            <CachedLabel\n              onClick={refreshCachedQuery}\n              cachedTimestamp={firstQueryResponse.cached_dttm}\n            />\n          )}\n          <Timer\n            startTime={chartUpdateStartTime}\n            endTime={chartUpdateEndTime}\n            isRunning={isLoading}\n            status={CHART_STATUS_MAP[chartStatus]}\n          />\n        </div>\n      </div>\n    );\n  },\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { forwardRef, RefObject } from 'react';\nimport { css, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\n\ninterface ControlPanelAlertProps {\n  title: string;\n  bodyText: string;\n  primaryButtonAction?: (e: React.MouseEvent) => void;\n  secondaryButtonAction?: (e: React.MouseEvent) => void;\n  primaryButtonText?: string;\n  secondaryButtonText?: string;\n  type: 'info' | 'warning' | 'error';\n  className?: string;\n}\n\nconst AlertContainer = styled.div`\n  ${({ theme }) => css`\n    margin: ${theme.gridUnit * 4}px;\n    padding: ${theme.gridUnit * 4}px;\n\n    border: 1px solid ${theme.colors.info.base};\n    background-color: ${theme.colors.info.light2};\n    border-radius: 2px;\n\n    color: ${theme.colors.info.dark2};\n    font-size: ${theme.typography.sizes.m}px;\n\n    p {\n      margin-bottom: ${theme.gridUnit}px;\n    }\n\n    & a,\n    & span[role='button'] {\n      color: inherit;\n      text-decoration: underline;\n      &:hover {\n        color: ${theme.colors.info.dark1};\n      }\n    }\n\n    &.alert-type-warning {\n      border-color: ${theme.colors.alert.base};\n      background-color: ${theme.colors.alert.light2};\n\n      p {\n        color: ${theme.colors.alert.dark2};\n      }\n\n      & a:hover,\n      & span[role='button']:hover {\n        color: ${theme.colors.alert.dark1};\n      }\n    }\n  `}\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  button {\n    line-height: 1;\n  }\n`;\n\nconst Title = styled.p`\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n`;\n\nconst typeChart = {\n  warning: 'warning',\n  danger: 'danger',\n};\n\nexport const ExploreAlert = forwardRef(\n  (\n    {\n      title,\n      bodyText,\n      primaryButtonAction,\n      secondaryButtonAction,\n      primaryButtonText,\n      secondaryButtonText,\n      type = 'info',\n      className = '',\n    }: ControlPanelAlertProps,\n    ref: RefObject<HTMLDivElement>,\n  ) => (\n    <AlertContainer className={`alert-type-${type} ${className}`} ref={ref}>\n      <Title>{title}</Title>\n      <p>{bodyText}</p>\n      {primaryButtonText && primaryButtonAction && (\n        <ButtonContainer>\n          {secondaryButtonAction && secondaryButtonText && (\n            <Button\n              buttonStyle=\"link\"\n              buttonSize=\"small\"\n              onClick={secondaryButtonAction}\n            >\n              {secondaryButtonText}\n            </Button>\n          )}\n          <Button\n            buttonStyle={type in typeChart ? typeChart[type] : 'primary'}\n            buttonSize=\"small\"\n            onClick={primaryButtonAction}\n          >\n            {primaryButtonText}\n          </Button>\n        </ButtonContainer>\n      )}\n    </AlertContainer>\n  ),\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport {\n  css,\n  ensureIsArray,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n  getChartMetadataRegistry,\n  DatasourceType,\n} from '@superset-ui/core';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { DataTablesPane } from './DataTablesPane';\nimport { buildV1ChartDataPayload } from '../exploreUtils';\nimport { ChartPills } from './ChartPills';\nimport { ExploreAlert } from './ExploreAlert';\nimport { getChartRequiredFieldsMissingMessage } from '../../utils/getChartRequiredFieldsMissingMessage';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onQuery: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  datasource: PropTypes.object,\n  dashboardId: PropTypes.number,\n  column_formats: PropTypes.object,\n  containerId: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  vizType: PropTypes.string.isRequired,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  standalone: PropTypes.bool,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  chartIsStale: PropTypes.bool,\n  chart: chartPropShape,\n  errorMessage: PropTypes.node,\n  triggerRender: PropTypes.bool,\n};\n\nconst GUTTER_SIZE_FACTOR = 1.25;\n\nconst INITIAL_SIZES = [100, 0];\nconst MIN_SIZES = [300, 65];\nconst DEFAULT_SOUTH_PANE_HEIGHT_PERCENT = 40;\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: stretch;\n  overflow: auto;\n  box-shadow: none;\n  height: 100%;\n\n  & > div {\n    height: 100%;\n  }\n\n  .gutter {\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    width: ${({ theme }) => theme.gridUnit * 9}px;\n    margin: ${({ theme }) => theme.gridUnit * GUTTER_SIZE_FACTOR}px auto;\n  }\n\n  .gutter.gutter-vertical {\n    display: ${({ showSplite }) => (showSplite ? 'block' : 'none')};\n    cursor: row-resize;\n  }\n\n  .ant-collapse {\n    .ant-tabs {\n      height: 100%;\n      .ant-tabs-nav {\n        padding-left: ${({ theme }) => theme.gridUnit * 5}px;\n        margin: 0;\n      }\n      .ant-tabs-content-holder {\n        overflow: hidden;\n        .ant-tabs-content {\n          height: 100%;\n        }\n      }\n    }\n  }\n`;\n\nconst ExploreChartPanel = ({\n  chart,\n  slice,\n  vizType,\n  ownState,\n  triggerRender,\n  force,\n  datasource,\n  errorMessage,\n  form_data: formData,\n  onQuery,\n  actions,\n  timeout,\n  standalone,\n  chartIsStale,\n  chartAlert,\n}) => {\n  const theme = useTheme();\n  const gutterMargin = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const gutterHeight = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const {\n    width: chartPanelWidth,\n    height: chartPanelHeight,\n    ref: chartPanelRef,\n  } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300,\n  });\n  const [splitSizes, setSplitSizes] = useState(\n    isFeatureEnabled(FeatureFlag.DATAPANEL_CLOSED_BY_DEFAULT)\n      ? INITIAL_SIZES\n      : getItem(LocalStorageKeys.chart_split_sizes, INITIAL_SIZES),\n  );\n  const [showSplite, setShowSplit] = useState(\n    isFeatureEnabled(FeatureFlag.DATAPANEL_CLOSED_BY_DEFAULT)\n      ? false\n      : getItem(LocalStorageKeys.is_datapanel_open, false),\n  );\n\n  const [showDatasetModal, setShowDatasetModal] = useState(false);\n\n  const metaDataRegistry = getChartMetadataRegistry();\n  const { useLegacyApi } = metaDataRegistry.get(vizType) ?? {};\n  const vizTypeNeedsDataset =\n    useLegacyApi && datasource.type !== DatasourceType.Table;\n  // added boolean column to below show boolean so that the errors aren't overlapping\n  const showAlertBanner =\n    !chartAlert &&\n    chartIsStale &&\n    !vizTypeNeedsDataset &&\n    chart.chartStatus !== 'failed' &&\n    ensureIsArray(chart.queriesResponse).length > 0;\n\n  const updateQueryContext = useCallback(\n    async function fetchChartData() {\n      if (slice && slice.query_context === null) {\n        const queryContext = buildV1ChartDataPayload({\n          formData: slice.form_data,\n          force,\n          resultFormat: 'json',\n          resultType: 'full',\n          setDataMask: null,\n          ownState: null,\n        });\n\n        await SupersetClient.put({\n          endpoint: `/api/v1/chart/${slice.slice_id}`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            query_context: JSON.stringify(queryContext),\n            query_context_generation: true,\n          }),\n        });\n      }\n    },\n    [slice],\n  );\n\n  useEffect(() => {\n    updateQueryContext();\n  }, [updateQueryContext]);\n\n  useEffect(() => {\n    setItem(LocalStorageKeys.chart_split_sizes, splitSizes);\n  }, [splitSizes]);\n\n  const onDragEnd = useCallback(sizes => {\n    setSplitSizes(sizes);\n  }, []);\n\n  const refreshCachedQuery = useCallback(() => {\n    actions.setForceQuery(true);\n    actions.postChartFormData(\n      formData,\n      true,\n      timeout,\n      chart.id,\n      undefined,\n      ownState,\n    );\n    actions.updateQueryFormData(formData, chart.id);\n  }, [actions, chart.id, formData, ownState, timeout]);\n\n  const onCollapseChange = useCallback(isOpen => {\n    let splitSizes;\n    if (!isOpen) {\n      splitSizes = INITIAL_SIZES;\n    } else {\n      splitSizes = [\n        100 - DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n        DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n      ];\n    }\n    setSplitSizes(splitSizes);\n    setShowSplit(isOpen);\n  }, []);\n\n  const renderChart = useCallback(\n    () => (\n      <div\n        css={css`\n          min-height: 0;\n          flex: 1;\n          overflow: auto;\n        `}\n        ref={chartPanelRef}\n      >\n        {chartPanelWidth && chartPanelHeight && (\n          <ChartContainer\n            width={Math.floor(chartPanelWidth)}\n            height={chartPanelHeight}\n            ownState={ownState}\n            annotationData={chart.annotationData}\n            chartAlert={chart.chartAlert}\n            chartStackTrace={chart.chartStackTrace}\n            chartId={chart.id}\n            chartStatus={chart.chartStatus}\n            triggerRender={triggerRender}\n            force={force}\n            datasource={datasource}\n            errorMessage={errorMessage}\n            formData={formData}\n            latestQueryFormData={chart.latestQueryFormData}\n            onQuery={onQuery}\n            queriesResponse={chart.queriesResponse}\n            chartIsStale={chartIsStale}\n            setControlValue={actions.setControlValue}\n            timeout={timeout}\n            triggerQuery={chart.triggerQuery}\n            vizType={vizType}\n          />\n        )}\n      </div>\n    ),\n    [\n      actions.setControlValue,\n      chart.annotationData,\n      chart.chartAlert,\n      chart.chartStackTrace,\n      chart.chartStatus,\n      chart.id,\n      chart.latestQueryFormData,\n      chart.queriesResponse,\n      chart.triggerQuery,\n      chartIsStale,\n      chartPanelHeight,\n      chartPanelRef,\n      chartPanelWidth,\n      datasource,\n      errorMessage,\n      force,\n      formData,\n      onQuery,\n      ownState,\n      timeout,\n      triggerRender,\n      vizType,\n    ],\n  );\n\n  const panelBody = useMemo(\n    () => (\n      <div\n        className=\"panel-body\"\n        css={css`\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        {vizTypeNeedsDataset && (\n          <Alert\n            message={t('Chart type requires a dataset')}\n            type=\"error\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n            description={\n              <>\n                {t(\n                  'This chart type is not supported when using an unsaved query as a chart source. ',\n                )}\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => setShowDatasetModal(true)}\n                  css={{ textDecoration: 'underline' }}\n                >\n                  {t('Create a dataset')}\n                </span>\n                {t(' to visualize your data.')}\n              </>\n            }\n          />\n        )}\n        {showAlertBanner && (\n          <ExploreAlert\n            title={\n              errorMessage\n                ? t('Required control values have been removed')\n                : t('Your chart is not up to date')\n            }\n            bodyText={\n              errorMessage ? (\n                getChartRequiredFieldsMissingMessage(false)\n              ) : (\n                <span>\n                  {t(\n                    'You updated the values in the control panel, but the chart was not updated automatically. Run the query by clicking on the \"Update chart\" button or',\n                  )}{' '}\n                  <span role=\"button\" tabIndex={0} onClick={onQuery}>\n                    {t('click here')}\n                  </span>\n                  .\n                </span>\n              )\n            }\n            type=\"warning\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n          />\n        )}\n        <ChartPills\n          queriesResponse={chart.queriesResponse}\n          chartStatus={chart.chartStatus}\n          chartUpdateStartTime={chart.chartUpdateStartTime}\n          chartUpdateEndTime={chart.chartUpdateEndTime}\n          refreshCachedQuery={refreshCachedQuery}\n          rowLimit={formData?.row_limit}\n        />\n        {renderChart()}\n      </div>\n    ),\n    [\n      showAlertBanner,\n      errorMessage,\n      onQuery,\n      chart.queriesResponse,\n      chart.chartStatus,\n      chart.chartUpdateStartTime,\n      chart.chartUpdateEndTime,\n      refreshCachedQuery,\n      formData?.row_limit,\n      renderChart,\n    ],\n  );\n\n  const standaloneChartBody = useMemo(() => renderChart(), [renderChart]);\n\n  const [queryFormData, setQueryFormData] = useState(chart.latestQueryFormData);\n\n  useEffect(() => {\n    // only update when `latestQueryFormData` changes AND `triggerRender`\n    // is false. No update should be done when only `triggerRender` changes,\n    // as this can trigger a query downstream based on incomplete form data.\n    // (`latestQueryFormData` is only updated when a a valid request has been\n    // triggered).\n    if (!triggerRender) {\n      setQueryFormData(chart.latestQueryFormData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chart.latestQueryFormData]);\n\n  const elementStyle = useCallback(\n    (dimension, elementSize, gutterSize) => ({\n      [dimension]: `calc(${elementSize}% - ${gutterSize + gutterMargin}px)`,\n    }),\n    [gutterMargin],\n  );\n\n  if (standalone) {\n    // dom manipulation hack to get rid of the bootstrap theme's body background\n    const standaloneClass = 'background-transparent';\n    const bodyClasses = document.body.className.split(' ');\n    if (!bodyClasses.includes(standaloneClass)) {\n      document.body.className += ` ${standaloneClass}`;\n    }\n    return standaloneChartBody;\n  }\n\n  return (\n    <Styles\n      className=\"panel panel-default chart-container\"\n      showSplite={showSplite}\n    >\n      {vizType === 'filter_box' ? (\n        panelBody\n      ) : (\n        <Split\n          sizes={splitSizes}\n          minSize={MIN_SIZES}\n          direction=\"vertical\"\n          gutterSize={gutterHeight}\n          onDragEnd={onDragEnd}\n          elementStyle={elementStyle}\n          expandToMin\n        >\n          {panelBody}\n          <DataTablesPane\n            ownState={ownState}\n            queryFormData={queryFormData}\n            datasource={datasource}\n            queryForce={force}\n            onCollapseChange={onCollapseChange}\n            chartStatus={chart.chartStatus}\n            errorMessage={errorMessage}\n            actions={actions}\n          />\n        </Split>\n      )}\n      {showDatasetModal && (\n        <SaveDatasetModal\n          visible={showDatasetModal}\n          onHide={() => setShowDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n    </Styles>\n  );\n};\n\nExploreChartPanel.propTypes = propTypes;\n\nexport default ExploreChartPanel;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode } from 'react';\nimport { t } from '@superset-ui/core';\nimport Button from 'src/components/Button';\n\nexport type RunQueryButtonProps = {\n  loading: boolean;\n  onQuery: () => void;\n  onStop: () => void;\n  errorMessage: ReactNode;\n  isNewChart: boolean;\n  canStopQuery: boolean;\n  chartIsStale: boolean;\n};\n\nexport const RunQueryButton = ({\n  loading,\n  onQuery,\n  onStop,\n  errorMessage,\n  isNewChart,\n  canStopQuery,\n  chartIsStale,\n}: RunQueryButtonProps) =>\n  loading ? (\n    <Button onClick={onStop} buttonStyle=\"warning\" disabled={!canStopQuery}>\n      <i className=\"fa fa-stop-circle-o\" /> {t('Stop')}\n    </Button>\n  ) : (\n    <Button\n      onClick={onQuery}\n      buttonStyle={chartIsStale ? 'primary' : 'secondary'}\n      disabled={!!errorMessage}\n      data-test=\"run-query-button\"\n    >\n      {isNewChart ? t('Create chart') : t('Update chart')}\n    </Button>\n  );\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React, {\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  ensureIsArray,\n  t,\n  styled,\n  getChartControlPanelRegistry,\n  QueryFormData,\n  DatasourceType,\n  css,\n  SupersetTheme,\n  useTheme,\n  isDefined,\n  JsonValue,\n  NO_TIME_RANGE,\n} from '@superset-ui/core';\nimport {\n  ControlPanelSectionConfig,\n  ControlState,\n  CustomControlItem,\n  Dataset,\n  ExpandedControlItem,\n  isTemporalColumn,\n  sections,\n} from '@superset-ui/chart-controls';\nimport { useSelector } from 'react-redux';\nimport { rgba } from 'emotion-rgba';\nimport { kebabCase } from 'lodash';\n\nimport Collapse from 'src/components/Collapse';\nimport Tabs from 'src/components/Tabs';\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\nimport Modal from 'src/components/Modal';\n\nimport { usePrevious } from 'src/hooks/usePrevious';\nimport { getSectionsToRender } from 'src/explore/controlUtils';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport { ChartState, ExplorePageState } from 'src/explore/types';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport ControlRow from './ControlRow';\nimport Control from './Control';\nimport { ExploreAlert } from './ExploreAlert';\nimport { RunQueryButton } from './RunQueryButton';\nimport { Operators } from '../constants';\n\nconst { confirm } = Modal;\n\nexport type ControlPanelsContainerProps = {\n  exploreState: ExplorePageState['explore'];\n  actions: ExploreActions;\n  datasource_type: DatasourceType;\n  chart: ChartState;\n  controls: Record<string, ControlState>;\n  form_data: QueryFormData;\n  isDatasourceMetaLoading: boolean;\n  errorMessage: ReactNode;\n  onQuery: () => void;\n  onStop: () => void;\n  canStopQuery: boolean;\n  chartIsStale: boolean;\n};\n\nexport type ExpandedControlPanelSectionConfig = Omit<\n  ControlPanelSectionConfig,\n  'controlSetRows'\n> & {\n  controlSetRows: ExpandedControlItem[][];\n};\n\nconst iconStyles = css`\n  &.anticon {\n    font-size: unset;\n    .anticon {\n      line-height: unset;\n      vertical-align: unset;\n    }\n  }\n`;\n\nconst actionButtonsContainerStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  position: sticky;\n  bottom: 0;\n  flex-direction: column;\n  align-items: center;\n  padding: ${theme.gridUnit * 4}px;\n  z-index: 999;\n  background: linear-gradient(\n    ${rgba(theme.colors.grayscale.light5, 0)},\n    ${theme.colors.grayscale.light5} ${theme.opacity.mediumLight}\n  );\n\n  & > button {\n    min-width: 156px;\n  }\n`;\n\nconst Styles = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n\n  // Resizable add overflow-y: auto as a style to this div\n  // To override it, we need to use !important\n  overflow: visible !important;\n  #controlSections {\n    height: 100%;\n    overflow: visible;\n  }\n  .nav-tabs {\n    flex: 0 0 1;\n  }\n  .tab-content {\n    overflow: auto;\n    flex: 1 1 100%;\n  }\n  .Select__menu {\n    max-width: 100%;\n  }\n  .type-label {\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    width: ${({ theme }) => theme.gridUnit * 7}px;\n    display: inline-block;\n    text-align: center;\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n`;\n\nconst ControlPanelsTabs = styled(Tabs)`\n  ${({ theme, fullWidth }) => css`\n    height: 100%;\n    overflow: visible;\n    .ant-tabs-nav {\n      margin-bottom: 0;\n    }\n    .ant-tabs-nav-list {\n      width: ${fullWidth ? '100%' : '50%'};\n    }\n    .ant-tabs-tabpane {\n      height: 100%;\n    }\n    .ant-tabs-content-holder {\n      padding-top: ${theme.gridUnit * 4}px;\n    }\n\n    .ant-collapse-ghost > .ant-collapse-item {\n      &:not(:last-child) {\n        border-bottom: 1px solid ${theme.colors.grayscale.light3};\n      }\n\n      & > .ant-collapse-header {\n        font-size: ${theme.typography.sizes.s}px;\n      }\n\n      & > .ant-collapse-content > .ant-collapse-content-box {\n        padding-bottom: 0;\n        font-size: ${theme.typography.sizes.s}px;\n      }\n    }\n  `}\n`;\n\nconst isTimeSection = (section: ControlPanelSectionConfig): boolean =>\n  !!section.label &&\n  (sections.legacyRegularTime.label === section.label ||\n    sections.legacyTimeseriesTime.label === section.label);\n\nconst hasTimeColumn = (datasource: Dataset): boolean =>\n  datasource?.columns?.some(c => c.is_dttm);\nconst sectionsToExpand = (\n  sections: ControlPanelSectionConfig[],\n  datasource: Dataset,\n): string[] =>\n  // avoid expanding time section if datasource doesn't include time column\n  sections.reduce(\n    (acc, section) =>\n      (section.expanded || !section.label) &&\n      (!isTimeSection(section) || hasTimeColumn(datasource))\n        ? [...acc, String(section.label)]\n        : acc,\n    [] as string[],\n  );\n\nfunction getState(\n  vizType: string,\n  datasource: Dataset,\n  datasourceType: DatasourceType,\n) {\n  const querySections: ControlPanelSectionConfig[] = [];\n  const customizeSections: ControlPanelSectionConfig[] = [];\n\n  getSectionsToRender(vizType, datasourceType).forEach(section => {\n    // if at least one control in the section is not `renderTrigger`\n    // or asks to be displayed at the Data tab\n    if (\n      section.tabOverride === 'data' ||\n      section.controlSetRows.some(rows =>\n        rows.some(\n          control =>\n            control &&\n            typeof control === 'object' &&\n            'config' in control &&\n            control.config &&\n            (!control.config.renderTrigger ||\n              control.config.tabOverride === 'data'),\n        ),\n      )\n    ) {\n      querySections.push(section);\n    } else if (section.controlSetRows.length > 0) {\n      customizeSections.push(section);\n    }\n  });\n  const expandedQuerySections: string[] = sectionsToExpand(\n    querySections,\n    datasource,\n  );\n  const expandedCustomizeSections: string[] = sectionsToExpand(\n    customizeSections,\n    datasource,\n  );\n  return {\n    expandedQuerySections,\n    expandedCustomizeSections,\n    querySections,\n    customizeSections,\n  };\n}\n\nfunction useResetOnChangeRef(initialValue: () => any, resetOnChangeValue: any) {\n  const value = useRef(initialValue());\n  const prevResetOnChangeValue = useRef(resetOnChangeValue);\n  if (prevResetOnChangeValue.current !== resetOnChangeValue) {\n    value.current = initialValue();\n    prevResetOnChangeValue.current = resetOnChangeValue;\n  }\n\n  return value;\n}\n\nexport const ControlPanelsContainer = (props: ControlPanelsContainerProps) => {\n  const { colors } = useTheme();\n  const pluginContext = useContext(PluginContext);\n\n  const prevState = usePrevious(props.exploreState);\n  const prevDatasource = usePrevious(props.exploreState.datasource);\n  const prevChartStatus = usePrevious(props.chart.chartStatus);\n\n  const [showDatasourceAlert, setShowDatasourceAlert] = useState(false);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const controlsTransferred = useSelector<\n    ExplorePageState,\n    string[] | undefined\n  >(state => state.explore.controlsTransferred);\n\n  const defaultTimeFilter = useSelector<ExplorePageState>(\n    state => state.common?.conf?.DEFAULT_TIME_FILTER,\n  );\n\n  const { form_data, actions } = props;\n  const { setControlValue } = actions;\n  const { x_axis, adhoc_filters } = form_data;\n\n  const previousXAxis = usePrevious(x_axis);\n\n  useEffect(() => {\n    if (\n      x_axis &&\n      x_axis !== previousXAxis &&\n      isTemporalColumn(x_axis, props.exploreState.datasource)\n    ) {\n      const noFilter =\n        !adhoc_filters ||\n        !adhoc_filters.find(\n          filter =>\n            filter.expressionType === 'SIMPLE' &&\n            filter.operator === Operators.TEMPORAL_RANGE &&\n            filter.subject === x_axis,\n        );\n      if (noFilter) {\n        confirm({\n          title: t('The X-axis is not on the filters list'),\n          content:\n            t(`The X-axis is not on the filters list which will prevent it from being used in\n            time range filters in dashboards. Would you like to add it to the filters list?`),\n          onOk: () => {\n            setControlValue('adhoc_filters', [\n              ...(adhoc_filters || []),\n              {\n                clause: 'WHERE',\n                subject: x_axis,\n                operator: Operators.TEMPORAL_RANGE,\n                comparator: defaultTimeFilter || NO_TIME_RANGE,\n                expressionType: 'SIMPLE',\n              },\n            ]);\n          },\n        });\n      }\n    }\n  }, [\n    x_axis,\n    adhoc_filters,\n    setControlValue,\n    defaultTimeFilter,\n    previousXAxis,\n    props.exploreState.datasource,\n  ]);\n\n  useEffect(() => {\n    let shouldUpdateControls = false;\n    const removeDatasourceWarningFromControl = (\n      value: JsonValue | undefined,\n    ) => {\n      if (\n        typeof value === 'object' &&\n        isDefined(value) &&\n        'datasourceWarning' in value &&\n        value.datasourceWarning === true\n      ) {\n        shouldUpdateControls = true;\n        return { ...value, datasourceWarning: false };\n      }\n      return value;\n    };\n    if (\n      props.chart.chartStatus === 'success' &&\n      prevChartStatus !== 'success'\n    ) {\n      controlsTransferred?.forEach(controlName => {\n        shouldUpdateControls = false;\n        if (!isDefined(props.controls[controlName])) {\n          return;\n        }\n        const alteredControls = Array.isArray(props.controls[controlName].value)\n          ? ensureIsArray(props.controls[controlName].value)?.map(\n              removeDatasourceWarningFromControl,\n            )\n          : removeDatasourceWarningFromControl(\n              props.controls[controlName].value,\n            );\n        if (shouldUpdateControls) {\n          props.actions.setControlValue(controlName, alteredControls);\n        }\n      });\n    }\n  }, [\n    controlsTransferred,\n    prevChartStatus,\n    props.actions,\n    props.chart.chartStatus,\n    props.controls,\n  ]);\n\n  useEffect(() => {\n    if (\n      prevDatasource &&\n      prevDatasource.type !== DatasourceType.Query &&\n      (props.exploreState.datasource?.id !== prevDatasource.id ||\n        props.exploreState.datasource?.type !== prevDatasource.type)\n    ) {\n      setShowDatasourceAlert(true);\n      containerRef.current?.scrollTo(0, 0);\n    }\n  }, [\n    props.exploreState.datasource?.id,\n    props.exploreState.datasource?.type,\n    prevDatasource,\n  ]);\n\n  const {\n    expandedQuerySections,\n    expandedCustomizeSections,\n    querySections,\n    customizeSections,\n  } = useMemo(\n    () =>\n      getState(\n        form_data.viz_type,\n        props.exploreState.datasource,\n        props.datasource_type,\n      ),\n    [props.exploreState.datasource, form_data.viz_type, props.datasource_type],\n  );\n\n  const resetTransferredControls = useCallback(() => {\n    ensureIsArray(props.exploreState.controlsTransferred).forEach(controlName =>\n      props.actions.setControlValue(\n        controlName,\n        props.controls[controlName].default,\n      ),\n    );\n  }, [props.actions, props.exploreState.controlsTransferred, props.controls]);\n\n  const handleClearFormClick = useCallback(() => {\n    resetTransferredControls();\n    setShowDatasourceAlert(false);\n  }, [resetTransferredControls]);\n\n  const handleContinueClick = useCallback(() => {\n    setShowDatasourceAlert(false);\n  }, []);\n\n  const shouldRecalculateControlState = ({\n    name,\n    config,\n  }: CustomControlItem): boolean => {\n    const { controls, chart, exploreState } = props;\n\n    return Boolean(\n      config.shouldMapStateToProps?.(\n        prevState || exploreState,\n        exploreState,\n        controls[name],\n        chart,\n      ),\n    );\n  };\n\n  const renderControl = ({ name, config }: CustomControlItem) => {\n    const { controls, chart, exploreState } = props;\n    const { visibility } = config;\n\n    // If the control item is not an object, we have to look up the control data from\n    // the centralized controls file.\n    // When it is an object we read control data straight from `config` instead\n    const controlData = {\n      ...config,\n      ...controls[name],\n      ...(shouldRecalculateControlState({ name, config })\n        ? config?.mapStateToProps?.(exploreState, controls[name], chart)\n        : // for other controls, `mapStateToProps` is already run in\n          // controlUtils/getControlState.ts\n          undefined),\n      name,\n    };\n    const {\n      validationErrors,\n      label: baseLabel,\n      description: baseDescription,\n      ...restProps\n    } = controlData as ControlState & {\n      validationErrors?: any[];\n    };\n\n    const isVisible = visibility\n      ? visibility.call(config, props, controlData)\n      : undefined;\n\n    const label =\n      typeof baseLabel === 'function'\n        ? baseLabel(exploreState, controls[name], chart)\n        : baseLabel;\n\n    const description =\n      typeof baseDescription === 'function'\n        ? baseDescription(exploreState, controls[name], chart)\n        : baseDescription;\n\n    if (name === 'adhoc_filters') {\n      restProps.canDelete = (\n        valueToBeDeleted: Record<string, any>,\n        values: Record<string, any>[],\n      ) => {\n        const isTemporalRange = (filter: Record<string, any>) =>\n          filter.operator === Operators.TEMPORAL_RANGE;\n        if (!controls?.time_range?.value && isTemporalRange(valueToBeDeleted)) {\n          const count = values.filter(isTemporalRange).length;\n          if (count === 1) {\n            return t(\n              `You cannot delete the last temporal filter as it's used for time range filters in dashboards.`,\n            );\n          }\n        }\n        return true;\n      };\n    }\n\n    return (\n      <Control\n        key={`control-${name}`}\n        name={name}\n        label={label}\n        description={description}\n        validationErrors={validationErrors}\n        actions={props.actions}\n        isVisible={isVisible}\n        {...restProps}\n      />\n    );\n  };\n\n  const sectionHasHadNoErrors = useResetOnChangeRef(\n    () => ({}),\n    form_data.viz_type,\n  );\n\n  const renderControlPanelSection = (\n    section: ExpandedControlPanelSectionConfig,\n  ) => {\n    const { controls } = props;\n    const { label, description } = section;\n\n    // Section label can be a ReactNode but in some places we want to\n    // have a string ID. Using forced type conversion for now,\n    // should probably add a `id` field to sections in the future.\n    const sectionId = String(label);\n\n    const hasErrors = section.controlSetRows.some(rows =>\n      rows.some(item => {\n        const controlName =\n          typeof item === 'string'\n            ? item\n            : item && 'name' in item\n            ? item.name\n            : null;\n        return (\n          controlName &&\n          controlName in controls &&\n          controls[controlName].validationErrors &&\n          controls[controlName].validationErrors.length > 0\n        );\n      }),\n    );\n\n    if (!hasErrors) {\n      sectionHasHadNoErrors.current[sectionId] = true;\n    }\n\n    const errorColor = sectionHasHadNoErrors.current[sectionId]\n      ? colors.error.base\n      : colors.alert.base;\n\n    const PanelHeader = () => (\n      <span data-test=\"collapsible-control-panel-header\">\n        <span\n          css={(theme: SupersetTheme) => css`\n            font-size: ${theme.typography.sizes.m}px;\n            line-height: 1.3;\n          `}\n        >\n          {label}\n        </span>{' '}\n        {description && (\n          <Tooltip id={sectionId} title={description}>\n            <Icons.InfoCircleOutlined css={iconStyles} />\n          </Tooltip>\n        )}\n        {hasErrors && (\n          <Tooltip\n            id={`${kebabCase('validation-errors')}-tooltip`}\n            title={t('This section contains validation errors')}\n          >\n            <Icons.InfoCircleOutlined\n              css={css`\n                ${iconStyles};\n                color: ${errorColor};\n              `}\n            />\n          </Tooltip>\n        )}\n      </span>\n    );\n\n    return (\n      <Collapse.Panel\n        css={theme => css`\n          margin-bottom: 0;\n          box-shadow: none;\n\n          &:last-child {\n            padding-bottom: ${theme.gridUnit * 16}px;\n            border-bottom: 0;\n          }\n\n          .panel-body {\n            margin-left: ${theme.gridUnit * 4}px;\n            padding-bottom: 0;\n          }\n\n          span.label {\n            display: inline-block;\n          }\n          ${!section.label &&\n          `\n            .ant-collapse-header {\n              display: none;\n            }\n          `}\n        `}\n        header={<PanelHeader />}\n        key={sectionId}\n      >\n        {section.controlSetRows.map((controlSets, i) => {\n          const renderedControls = controlSets\n            .map(controlItem => {\n              if (!controlItem) {\n                // When the item is invalid\n                return null;\n              }\n              if (React.isValidElement(controlItem)) {\n                // When the item is a React element\n                return controlItem;\n              }\n              if (\n                controlItem.name &&\n                controlItem.config &&\n                controlItem.name !== 'datasource'\n              ) {\n                return renderControl(controlItem);\n              }\n              return null;\n            })\n            .filter(x => x !== null);\n          // don't show the row if it is empty\n          if (renderedControls.length === 0) {\n            return null;\n          }\n          return (\n            <ControlRow\n              key={`controlsetrow-${i}`}\n              controls={renderedControls}\n            />\n          );\n        })}\n      </Collapse.Panel>\n    );\n  };\n\n  const hasControlsTransferred =\n    ensureIsArray(props.exploreState.controlsTransferred).length > 0;\n\n  const DatasourceAlert = useCallback(\n    () =>\n      hasControlsTransferred ? (\n        <ExploreAlert\n          title={t('Keep control settings?')}\n          bodyText={t(\n            \"You've changed datasets. Any controls with data (columns, metrics) that match this new dataset have been retained.\",\n          )}\n          primaryButtonAction={handleContinueClick}\n          secondaryButtonAction={handleClearFormClick}\n          primaryButtonText={t('Continue')}\n          secondaryButtonText={t('Clear form')}\n          type=\"info\"\n        />\n      ) : (\n        <ExploreAlert\n          title={t('No form settings were maintained')}\n          bodyText={t(\n            'We were unable to carry over any controls when switching to this new dataset.',\n          )}\n          primaryButtonAction={handleContinueClick}\n          primaryButtonText={t('Continue')}\n          type=\"warning\"\n        />\n      ),\n    [handleClearFormClick, handleContinueClick, hasControlsTransferred],\n  );\n\n  const dataTabHasHadNoErrors = useResetOnChangeRef(\n    () => false,\n    form_data.viz_type,\n  );\n\n  const dataTabTitle = useMemo(() => {\n    if (!props.errorMessage) {\n      dataTabHasHadNoErrors.current = true;\n    }\n\n    const errorColor = dataTabHasHadNoErrors.current\n      ? colors.error.base\n      : colors.alert.base;\n\n    return (\n      <>\n        <span>{t('Data')}</span>\n        {props.errorMessage && (\n          <span\n            css={(theme: SupersetTheme) => css`\n              margin-left: ${theme.gridUnit * 2}px;\n            `}\n          >\n            {' '}\n            <Tooltip\n              id=\"query-error-tooltip\"\n              placement=\"right\"\n              title={props.errorMessage}\n            >\n              <Icons.ExclamationCircleOutlined\n                css={css`\n                  ${iconStyles};\n                  color: ${errorColor};\n                `}\n              />\n            </Tooltip>\n          </span>\n        )}\n      </>\n    );\n  }, [\n    colors.error.base,\n    colors.alert.base,\n    dataTabHasHadNoErrors,\n    props.errorMessage,\n  ]);\n\n  const controlPanelRegistry = getChartControlPanelRegistry();\n  if (!controlPanelRegistry.has(form_data.viz_type) && pluginContext.loading) {\n    return <Loading />;\n  }\n\n  const showCustomizeTab = customizeSections.length > 0;\n\n  return (\n    <Styles ref={containerRef}>\n      <ControlPanelsTabs\n        id=\"controlSections\"\n        data-test=\"control-tabs\"\n        fullWidth={showCustomizeTab}\n        allowOverflow={false}\n      >\n        <Tabs.TabPane key=\"query\" tab={dataTabTitle}>\n          <Collapse\n            defaultActiveKey={expandedQuerySections}\n            expandIconPosition=\"right\"\n            ghost\n          >\n            {showDatasourceAlert && <DatasourceAlert />}\n            {querySections.map(renderControlPanelSection)}\n          </Collapse>\n        </Tabs.TabPane>\n        {showCustomizeTab && (\n          <Tabs.TabPane key=\"display\" tab={t('Customize')}>\n            <Collapse\n              defaultActiveKey={expandedCustomizeSections}\n              expandIconPosition=\"right\"\n              ghost\n            >\n              {customizeSections.map(renderControlPanelSection)}\n            </Collapse>\n          </Tabs.TabPane>\n        )}\n      </ControlPanelsTabs>\n      <div css={actionButtonsContainerStyles}>\n        <RunQueryButton\n          onQuery={props.onQuery}\n          onStop={props.onStop}\n          errorMessage={props.errorMessage}\n          loading={props.chart.chartStatus === 'loading'}\n          isNewChart={!props.chart.queriesResponse}\n          canStopQuery={props.canStopQuery}\n          chartIsStale={props.chartIsStale}\n        />\n      </div>\n    </Styles>\n  );\n};\n\nexport default ControlPanelsContainer;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport { Dispatch } from 'redux';\nimport { SelectValue } from 'antd/lib/select';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport {\n  css,\n  t,\n  styled,\n  DatasourceType,\n  isDefined,\n  ensureIsArray,\n} from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Form, FormItem } from 'src/components/Form';\nimport Alert from 'src/components/Alert';\nimport Modal from 'src/components/Modal';\nimport { Radio } from 'src/components/Radio';\nimport Button from 'src/components/Button';\nimport { Select } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport { setSaveChartModalVisibility } from 'src/explore/actions/saveModalActions';\nimport { SaveActionType } from 'src/explore/types';\n\n// Session storage key for recent dashboard\nconst SK_DASHBOARD_ID = 'save_chart_recent_dashboard';\n\ninterface SaveModalProps extends RouteComponentProps {\n  addDangerToast: (msg: string) => void;\n  actions: Record<string, any>;\n  form_data?: Record<string, any>;\n  userId: number;\n  dashboards: Array<any>;\n  alert?: string;\n  sliceName?: string;\n  slice?: Record<string, any>;\n  datasource?: Record<string, any>;\n  dashboardId: '' | number | null;\n  isVisible: boolean;\n  dispatch: Dispatch;\n}\n\ntype SaveModalState = {\n  saveToDashboardId: number | string | null;\n  newSliceName?: string;\n  newDashboardName?: string;\n  datasetName: string;\n  alert: string | null;\n  action: SaveActionType;\n  isLoading: boolean;\n  saveStatus?: string | null;\n};\n\nexport const StyledModal = styled(Modal)`\n  .ant-modal-body {\n    overflow: visible;\n  }\n  i {\n    position: absolute;\n    top: -${({ theme }) => theme.gridUnit * 5.25}px;\n    left: ${({ theme }) => theme.gridUnit * 26.75}px;\n  }\n`;\n\nclass SaveModal extends React.Component<SaveModalProps, SaveModalState> {\n  constructor(props: SaveModalProps) {\n    super(props);\n    this.state = {\n      saveToDashboardId: null,\n      newSliceName: props.sliceName,\n      datasetName: props.datasource?.name,\n      alert: null,\n      action: this.canOverwriteSlice() ? 'overwrite' : 'saveas',\n      isLoading: false,\n    };\n    this.onDashboardSelectChange = this.onDashboardSelectChange.bind(this);\n    this.onSliceNameChange = this.onSliceNameChange.bind(this);\n    this.changeAction = this.changeAction.bind(this);\n    this.saveOrOverwrite = this.saveOrOverwrite.bind(this);\n    this.isNewDashboard = this.isNewDashboard.bind(this);\n    this.removeAlert = this.removeAlert.bind(this);\n    this.onHide = this.onHide.bind(this);\n  }\n\n  isNewDashboard(): boolean {\n    return !!(!this.state.saveToDashboardId && this.state.newDashboardName);\n  }\n\n  canOverwriteSlice(): boolean {\n    return (\n      this.props.slice?.owners?.includes(this.props.userId) &&\n      !this.props.slice?.is_managed_externally\n    );\n  }\n\n  componentDidMount() {\n    this.props.actions.fetchDashboards(this.props.userId).then(() => {\n      if (ensureIsArray(this.props.dashboards).length === 0) {\n        return;\n      }\n      const dashboardIds = this.props.dashboards?.map(\n        dashboard => dashboard.value,\n      );\n      const lastDashboard = sessionStorage.getItem(SK_DASHBOARD_ID);\n      let recentDashboard = lastDashboard && parseInt(lastDashboard, 10);\n\n      if (this.props.dashboardId) {\n        recentDashboard = this.props.dashboardId;\n      }\n\n      if (\n        recentDashboard !== null &&\n        dashboardIds.indexOf(recentDashboard) !== -1\n      ) {\n        this.setState({\n          saveToDashboardId: recentDashboard,\n        });\n      }\n    });\n  }\n\n  handleDatasetNameChange = (e: React.FormEvent<HTMLInputElement>) => {\n    // @ts-expect-error\n    this.setState({ datasetName: e.target.value });\n  };\n\n  onSliceNameChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ newSliceName: event.target.value });\n  }\n\n  onDashboardSelectChange(selected: SelectValue) {\n    const newDashboardName = selected ? String(selected) : undefined;\n    const saveToDashboardId =\n      selected && typeof selected === 'number' ? selected : null;\n    this.setState({ saveToDashboardId, newDashboardName });\n  }\n\n  changeAction(action: SaveActionType) {\n    this.setState({ action });\n  }\n\n  onHide() {\n    this.props.dispatch(setSaveChartModalVisibility(false));\n  }\n\n  async saveOrOverwrite(gotodash: boolean) {\n    this.setState({ alert: null, isLoading: true });\n    this.props.actions.removeSaveModalAlert();\n\n    //  Create or retrieve dashboard\n    type DashboardGetResponse = {\n      id: number;\n      url: string;\n      dashboard_title: string;\n    };\n\n    try {\n      if (this.props.datasource?.type === DatasourceType.Query) {\n        const { schema, sql, database } = this.props.datasource;\n        const { templateParams } = this.props.datasource;\n        const columns = this.props.datasource?.columns || [];\n\n        await this.props.actions.saveDataset({\n          schema,\n          sql,\n          database,\n          templateParams,\n          datasourceName: this.state.datasetName,\n          columns,\n        });\n      }\n\n      //  Get chart dashboards\n      let sliceDashboards: number[] = [];\n      if (this.props.slice && this.state.action === 'overwrite') {\n        sliceDashboards = await this.props.actions.getSliceDashboards(\n          this.props.slice,\n        );\n      }\n\n      const formData = this.props.form_data || {};\n      delete formData.url_params;\n\n      let dashboard: DashboardGetResponse | null = null;\n      if (this.state.newDashboardName || this.state.saveToDashboardId) {\n        let saveToDashboardId = this.state.saveToDashboardId || null;\n        if (!this.state.saveToDashboardId) {\n          const response = await this.props.actions.createDashboard(\n            this.state.newDashboardName,\n          );\n          saveToDashboardId = response.id;\n        }\n\n        const response = await this.props.actions.getDashboard(\n          saveToDashboardId,\n        );\n        dashboard = response.result;\n        if (isDefined(dashboard) && isDefined(dashboard?.id)) {\n          sliceDashboards = sliceDashboards.includes(dashboard.id)\n            ? sliceDashboards\n            : [...sliceDashboards, dashboard.id];\n          formData.dashboards = sliceDashboards;\n        }\n      }\n\n      // Sets the form data\n      this.props.actions.setFormData({ ...formData });\n\n      //  Update or create slice\n      let value: { id: number };\n      if (this.state.action === 'overwrite') {\n        value = await this.props.actions.updateSlice(\n          this.props.slice,\n          this.state.newSliceName,\n          sliceDashboards,\n          dashboard\n            ? {\n                title: dashboard.dashboard_title,\n                new: !this.state.saveToDashboardId,\n              }\n            : null,\n        );\n      } else {\n        value = await this.props.actions.createSlice(\n          this.state.newSliceName,\n          sliceDashboards,\n          dashboard\n            ? {\n                title: dashboard.dashboard_title,\n                new: !this.state.saveToDashboardId,\n              }\n            : null,\n        );\n      }\n\n      if (dashboard) {\n        sessionStorage.setItem(SK_DASHBOARD_ID, `${dashboard.id}`);\n      } else {\n        sessionStorage.removeItem(SK_DASHBOARD_ID);\n      }\n\n      // Go to new dashboard url\n      if (gotodash && dashboard) {\n        this.props.history.push(dashboard.url);\n        return;\n      }\n\n      const searchParams = new URLSearchParams(window.location.search);\n      searchParams.set('save_action', this.state.action);\n      searchParams.delete('form_data_key');\n      if (this.state.action === 'saveas') {\n        searchParams.set('slice_id', value.id.toString());\n      }\n      this.props.history.replace(`/explore/?${searchParams.toString()}`);\n\n      this.setState({ isLoading: false });\n      this.onHide();\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  renderSaveChartModal = () => {\n    const dashboardSelectValue =\n      this.state.saveToDashboardId || this.state.newDashboardName;\n\n    return (\n      <Form data-test=\"save-modal-body\" layout=\"vertical\">\n        {(this.state.alert || this.props.alert) && (\n          <Alert\n            type=\"warning\"\n            message={this.state.alert || this.props.alert}\n            onClose={this.removeAlert}\n          />\n        )}\n        <FormItem data-test=\"radio-group\">\n          <Radio\n            id=\"overwrite-radio\"\n            disabled={!this.canOverwriteSlice()}\n            checked={this.state.action === 'overwrite'}\n            onChange={() => this.changeAction('overwrite')}\n            data-test=\"save-overwrite-radio\"\n          >\n            {t('Save (Overwrite)')}\n          </Radio>\n          <Radio\n            id=\"saveas-radio\"\n            data-test=\"saveas-radio\"\n            checked={this.state.action === 'saveas'}\n            onChange={() => this.changeAction('saveas')}\n          >\n            {t('Save as...')}\n          </Radio>\n        </FormItem>\n        <hr />\n        <FormItem label={t('Chart name')} required>\n          <Input\n            name=\"new_slice_name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={this.state.newSliceName}\n            onChange={this.onSliceNameChange}\n            data-test=\"new-chart-name\"\n          />\n        </FormItem>\n        {this.props.datasource?.type === 'query' && (\n          <FormItem label={t('Dataset Name')} required>\n            <InfoTooltipWithTrigger\n              tooltip={t('A reusable dataset will be saved with your chart.')}\n              placement=\"right\"\n            />\n            <Input\n              name=\"dataset_name\"\n              type=\"text\"\n              placeholder=\"Dataset Name\"\n              value={this.state.datasetName}\n              onChange={this.handleDatasetNameChange}\n              data-test=\"new-dataset-name\"\n            />\n          </FormItem>\n        )}\n        <FormItem\n          label={t('Add to dashboard')}\n          data-test=\"save-chart-modal-select-dashboard-form\"\n        >\n          <Select\n            allowClear\n            allowNewOptions\n            ariaLabel={t('Select a dashboard')}\n            options={this.props.dashboards}\n            onChange={this.onDashboardSelectChange}\n            value={dashboardSelectValue || undefined}\n            placeholder={\n              <div>\n                <b>{t('Select')}</b>\n                {t(' a dashboard OR ')}\n                <b>{t('create')}</b>\n                {t(' a new one')}\n              </div>\n            }\n          />\n        </FormItem>\n      </Form>\n    );\n  };\n\n  renderFooter = () => (\n    <div data-test=\"save-modal-footer\">\n      <Button id=\"btn_cancel\" buttonSize=\"small\" onClick={this.onHide}>\n        {t('Cancel')}\n      </Button>\n      <Button\n        id=\"btn_modal_save_goto_dash\"\n        buttonSize=\"small\"\n        disabled={\n          !this.state.newSliceName ||\n          (!this.state.saveToDashboardId && !this.state.newDashboardName) ||\n          (this.props.datasource?.type !== DatasourceType.Table &&\n            !this.state.datasetName)\n        }\n        onClick={() => this.saveOrOverwrite(true)}\n      >\n        {this.isNewDashboard()\n          ? t('Save & go to new dashboard')\n          : t('Save & go to dashboard')}\n      </Button>\n      <Button\n        id=\"btn_modal_save\"\n        buttonSize=\"small\"\n        buttonStyle=\"primary\"\n        onClick={() => this.saveOrOverwrite(false)}\n        disabled={\n          this.state.isLoading ||\n          !this.state.newSliceName ||\n          (this.props.datasource?.type !== DatasourceType.Table &&\n            !this.state.datasetName)\n        }\n        data-test=\"btn-modal-save\"\n      >\n        {!this.canOverwriteSlice() && this.props.slice\n          ? t('Save as new chart')\n          : this.isNewDashboard()\n          ? t('Save to new dashboard')\n          : t('Save')}\n      </Button>\n    </div>\n  );\n\n  removeAlert() {\n    if (this.props.alert) {\n      this.props.actions.removeSaveModalAlert();\n    }\n    this.setState({ alert: null });\n  }\n\n  render() {\n    return (\n      <StyledModal\n        show={this.props.isVisible}\n        onHide={this.onHide}\n        title={t('Save chart')}\n        footer={this.renderFooter()}\n      >\n        {this.state.isLoading ? (\n          <div\n            css={css`\n              display: flex;\n              justify-content: center;\n            `}\n          >\n            <Loading position=\"normal\" />\n          </div>\n        ) : (\n          this.renderSaveChartModal()\n        )}\n      </StyledModal>\n    );\n  }\n}\n\ninterface StateProps {\n  datasource: any;\n  slice: any;\n  userId: any;\n  dashboards: any;\n  alert: any;\n  isVisible: boolean;\n}\n\nfunction mapStateToProps({\n  explore,\n  saveModal,\n  user,\n}: Record<string, any>): StateProps {\n  return {\n    datasource: explore.datasource,\n    slice: explore.slice,\n    userId: user?.userId,\n    dashboards: saveModal.dashboards,\n    alert: saveModal.saveModalAlert,\n    isVisible: saveModal.isVisible,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(SaveModal));\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { css, Metric, styled } from '@superset-ui/core';\nimport { ColumnMeta } from '@superset-ui/chart-controls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport {\n  StyledColumnOption,\n  StyledMetricOption,\n} from 'src/explore/components/optionRenderers';\nimport Icons from 'src/components/Icons';\n\nimport { DatasourcePanelDndItem } from '../types';\n\nconst DatasourceItemContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: ${theme.gridUnit * 6}px;\n    padding: 0 ${theme.gridUnit}px;\n\n    // hack to make the drag preview image corners rounded\n    transform: translate(0, 0);\n    background-color: inherit;\n    border-radius: 4px;\n\n    > div {\n      min-width: 0;\n      margin-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\ninterface DatasourcePanelDragOptionProps extends DatasourcePanelDndItem {\n  labelRef?: React.RefObject<any>;\n  showTooltip?: boolean;\n}\n\ntype MetricOption = Omit<Metric, 'id'> & {\n  label?: string;\n};\n\nexport default function DatasourcePanelDragOption(\n  props: DatasourcePanelDragOptionProps,\n) {\n  const { labelRef, showTooltip, type, value } = props;\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      value: props.value,\n      type: props.type,\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const optionProps = {\n    labelRef,\n    showTooltip: !isDragging && showTooltip,\n    showType: true,\n  };\n\n  return (\n    <DatasourceItemContainer data-test=\"DatasourcePanelDragOption\" ref={drag}>\n      {type === DndItemType.Column ? (\n        <StyledColumnOption column={value as ColumnMeta} {...optionProps} />\n      ) : (\n        <StyledMetricOption metric={value as MetricOption} {...optionProps} />\n      )}\n      <Icons.Drag />\n    </DatasourceItemContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  css,\n  styled,\n  t,\n  DatasourceType,\n  Metric,\n  QueryFormData,\n} from '@superset-ui/core';\n\nimport { ControlConfig, ColumnMeta } from '@superset-ui/chart-controls';\n\nimport { debounce, isArray } from 'lodash';\nimport { matchSorter, rankings } from 'match-sorter';\nimport Collapse from 'src/components/Collapse';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { Input } from 'src/components/Input';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport Control from 'src/explore/components/Control';\nimport DatasourcePanelDragOption from './DatasourcePanelDragOption';\nimport { DndItemType } from '../DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from '../optionRenderers';\nimport { DndItemValue } from './types';\n\ninterface DatasourceControl extends ControlConfig {\n  datasource?: IDatasource;\n}\n\nexport interface DataSourcePanelColumn {\n  is_dttm?: boolean | null;\n  description?: string | null;\n  expression?: string | null;\n  is_certified?: number | null;\n  column_name?: string | null;\n  name?: string | null;\n  type?: string;\n}\nexport interface IDatasource {\n  metrics: Metric[];\n  columns: DataSourcePanelColumn[];\n  id: number;\n  type: DatasourceType;\n  database: {\n    id: number;\n  };\n  sql?: string | null;\n  datasource_name?: string | null;\n  name?: string | null;\n  schema?: string | null;\n}\n\nexport interface Props {\n  datasource: IDatasource;\n  controls: {\n    datasource: DatasourceControl;\n  };\n  actions: Partial<ExploreActions> & Pick<ExploreActions, 'setControlValue'>;\n  // we use this props control force update when this panel resize\n  shouldForceUpdate?: number;\n  formData?: QueryFormData;\n}\n\nconst enableExploreDnd = isFeatureEnabled(\n  FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP,\n);\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  text-decoration: underline;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\n\nconst ButtonContainer = styled.div`\n  text-align: center;\n  padding-top: 2px;\n`;\n\nconst DatasourceContainer = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.grayscale.light5};\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    .ant-collapse {\n      height: auto;\n    }\n    .field-selections {\n      padding: 0 0 ${4 * theme.gridUnit}px;\n      overflow: auto;\n    }\n    .field-length {\n      margin-bottom: ${theme.gridUnit * 2}px;\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.light1};\n    }\n    .form-control.input-md {\n      width: calc(100% - ${theme.gridUnit * 8}px);\n      height: ${theme.gridUnit * 8}px;\n      margin: ${theme.gridUnit * 2}px auto;\n    }\n    .type-label {\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n    }\n    .Control {\n      padding-bottom: 0;\n    }\n  `};\n`;\n\nconst LabelWrapper = styled.div`\n  ${({ theme }) => css`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: ${theme.typography.sizes.s}px;\n    background-color: ${theme.colors.grayscale.light4};\n    margin: ${theme.gridUnit * 2}px 0;\n    border-radius: 4px;\n    padding: 0 ${theme.gridUnit}px;\n\n    &:first-of-type {\n      margin-top: 0;\n    }\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n\n    ${enableExploreDnd &&\n    css`\n      padding: 0;\n      cursor: pointer;\n      &:hover {\n        background-color: ${theme.colors.grayscale.light3};\n      }\n    `}\n\n    & > span {\n      white-space: nowrap;\n    }\n\n    .option-label {\n      display: inline;\n    }\n\n    .metric-option {\n      & > svg {\n        min-width: ${theme.gridUnit * 4}px;\n      }\n      & > .option-label {\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n  `}\n`;\n\nconst SectionHeader = styled.span`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.m}px;\n    line-height: 1.3;\n  `}\n`;\n\nconst StyledInfoboxWrapper = styled.div`\n  ${({ theme }) => css`\n    margin: 0 ${theme.gridUnit * 2.5}px;\n\n    span {\n      text-decoration: underline;\n    }\n  `}\n`;\n\nconst LabelContainer = (props: {\n  children: React.ReactElement;\n  className: string;\n}) => {\n  const labelRef = useRef<HTMLDivElement>(null);\n  const extendedProps = {\n    labelRef,\n  };\n  return (\n    <LabelWrapper className={props.className}>\n      {React.cloneElement(props.children, extendedProps)}\n    </LabelWrapper>\n  );\n};\n\nexport default function DataSourcePanel({\n  datasource,\n  formData,\n  controls: { datasource: datasourceControl },\n  actions,\n  shouldForceUpdate,\n}: Props) {\n  const { columns: _columns, metrics } = datasource;\n  // display temporal column first\n  const columns = useMemo(\n    () =>\n      [...(isArray(_columns) ? _columns : [])].sort((col1, col2) => {\n        if (col1?.is_dttm && !col2?.is_dttm) {\n          return -1;\n        }\n        if (col2?.is_dttm && !col1?.is_dttm) {\n          return 1;\n        }\n        return 0;\n      }),\n    [_columns],\n  );\n\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [lists, setList] = useState({\n    columns,\n    metrics,\n  });\n  const [showAllMetrics, setShowAllMetrics] = useState(false);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n\n  const DEFAULT_MAX_COLUMNS_LENGTH = 50;\n  const DEFAULT_MAX_METRICS_LENGTH = 50;\n\n  const search = useMemo(\n    () =>\n      debounce((value: string) => {\n        if (value === '') {\n          setList({ columns, metrics });\n          return;\n        }\n        setList({\n          columns: matchSorter(columns, value, {\n            keys: [\n              {\n                key: 'verbose_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: 'column_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: item =>\n                  [item?.description ?? '', item?.expression ?? ''].map(\n                    x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n                  ),\n                threshold: rankings.CONTAINS,\n                maxRanking: rankings.CONTAINS,\n              },\n            ],\n            keepDiacritics: true,\n          }),\n          metrics: matchSorter(metrics, value, {\n            keys: [\n              {\n                key: 'verbose_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: 'metric_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: item =>\n                  [item?.description ?? '', item?.expression ?? ''].map(\n                    x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n                  ),\n                threshold: rankings.CONTAINS,\n                maxRanking: rankings.CONTAINS,\n              },\n            ],\n            keepDiacritics: true,\n            baseSort: (a, b) =>\n              Number(b?.item?.is_certified ?? 0) -\n                Number(a?.item?.is_certified ?? 0) ||\n              String(a?.rankedValue ?? '').localeCompare(b?.rankedValue ?? ''),\n          }),\n        });\n      }, FAST_DEBOUNCE),\n    [columns, metrics],\n  );\n\n  useEffect(() => {\n    setList({\n      columns,\n      metrics,\n    });\n    setInputValue('');\n  }, [columns, datasource, metrics]);\n\n  const sortCertifiedFirst = (slice: DataSourcePanelColumn[]) =>\n    slice.sort((a, b) => (b?.is_certified ?? 0) - (a?.is_certified ?? 0));\n\n  const metricSlice = useMemo(\n    () =>\n      showAllMetrics\n        ? lists?.metrics\n        : lists?.metrics?.slice?.(0, DEFAULT_MAX_METRICS_LENGTH),\n    [lists?.metrics, showAllMetrics],\n  );\n\n  const columnSlice = useMemo(\n    () =>\n      showAllColumns\n        ? sortCertifiedFirst(lists?.columns)\n        : sortCertifiedFirst(\n            lists?.columns?.slice?.(0, DEFAULT_MAX_COLUMNS_LENGTH),\n          ),\n    [lists.columns, showAllColumns],\n  );\n\n  const showInfoboxCheck = () => {\n    if (sessionStorage.getItem('showInfobox') === 'false') return false;\n    return true;\n  };\n\n  const saveableDatasets = {\n    query: DatasourceType.Query,\n    saved_query: DatasourceType.SavedQuery,\n  };\n\n  const datasourceIsSaveable =\n    datasource.type && saveableDatasets[datasource.type];\n\n  const mainBody = useMemo(\n    () => (\n      <>\n        <Input\n          allowClear\n          onChange={evt => {\n            setInputValue(evt.target.value);\n            search(evt.target.value);\n          }}\n          value={inputValue}\n          className=\"form-control input-md\"\n          placeholder={t('Search Metrics & Columns')}\n        />\n        <div className=\"field-selections\">\n          {datasourceIsSaveable && showInfoboxCheck() && (\n            <StyledInfoboxWrapper>\n              <Alert\n                closable\n                onClose={() => sessionStorage.setItem('showInfobox', 'false')}\n                type=\"info\"\n                message=\"\"\n                description={\n                  <>\n                    <span\n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={() => setShowSaveDatasetModal(true)}\n                      className=\"add-dataset-alert-description\"\n                    >\n                      {t('Create a dataset')}\n                    </span>\n                    {t(' to edit or add columns and metrics.')}\n                  </>\n                }\n              />\n            </StyledInfoboxWrapper>\n          )}\n          <Collapse\n            defaultActiveKey={['metrics', 'column']}\n            expandIconPosition=\"right\"\n            ghost\n          >\n            {metrics?.length && (\n              <Collapse.Panel\n                header={<SectionHeader>{t('Metrics')}</SectionHeader>}\n                key=\"metrics\"\n              >\n                <div className=\"field-length\">\n                  {t(\n                    `Showing %s of %s`,\n                    metricSlice?.length,\n                    lists?.metrics.length,\n                  )}\n                </div>\n                {metricSlice?.map?.((m: Metric) => (\n                  <LabelContainer\n                    key={m.metric_name + String(shouldForceUpdate)}\n                    className=\"column\"\n                  >\n                    {enableExploreDnd ? (\n                      <DatasourcePanelDragOption\n                        value={m}\n                        type={DndItemType.Metric}\n                      />\n                    ) : (\n                      <StyledMetricOption metric={m} showType />\n                    )}\n                  </LabelContainer>\n                ))}\n                {lists?.metrics?.length > DEFAULT_MAX_METRICS_LENGTH ? (\n                  <ButtonContainer>\n                    <Button onClick={() => setShowAllMetrics(!showAllMetrics)}>\n                      {showAllMetrics ? t('Show less...') : t('Show all...')}\n                    </Button>\n                  </ButtonContainer>\n                ) : (\n                  <></>\n                )}\n              </Collapse.Panel>\n            )}\n            <Collapse.Panel\n              header={<SectionHeader>{t('Columns')}</SectionHeader>}\n              key=\"column\"\n            >\n              <div className=\"field-length\">\n                {t(\n                  `Showing %s of %s`,\n                  columnSlice.length,\n                  lists.columns.length,\n                )}\n              </div>\n              {columnSlice.map(col => (\n                <LabelContainer\n                  key={col.column_name + String(shouldForceUpdate)}\n                  className=\"column\"\n                >\n                  {enableExploreDnd ? (\n                    <DatasourcePanelDragOption\n                      value={col as DndItemValue}\n                      type={DndItemType.Column}\n                    />\n                  ) : (\n                    <StyledColumnOption column={col as ColumnMeta} showType />\n                  )}\n                </LabelContainer>\n              ))}\n              {lists.columns.length > DEFAULT_MAX_COLUMNS_LENGTH ? (\n                <ButtonContainer>\n                  <Button onClick={() => setShowAllColumns(!showAllColumns)}>\n                    {showAllColumns ? t('Show Less...') : t('Show all...')}\n                  </Button>\n                </ButtonContainer>\n              ) : (\n                <></>\n              )}\n            </Collapse.Panel>\n          </Collapse>\n        </div>\n      </>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      columnSlice,\n      inputValue,\n      lists.columns.length,\n      lists?.metrics?.length,\n      metricSlice,\n      search,\n      showAllColumns,\n      showAllMetrics,\n      datasourceIsSaveable,\n      shouldForceUpdate,\n    ],\n  );\n\n  return (\n    <DatasourceContainer>\n      {datasourceIsSaveable && showSaveDatasetModal && (\n        <SaveDatasetModal\n          visible={showSaveDatasetModal}\n          onHide={() => setShowSaveDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n      <Control {...datasourceControl} name=\"datasource\" actions={actions} />\n      {datasource.id != null && mainBody}\n    </DatasourceContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport memoize from 'lodash/memoize';\nimport { isControlPanelSectionConfig } from '@superset-ui/chart-controls';\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { controls } from '../explore/controls';\n\nconst memoizedControls = memoize((vizType, controlPanel) => {\n  const controlsMap = {};\n  (controlPanel?.controlPanelSections || [])\n    .filter(isControlPanelSectionConfig)\n    .forEach(section => {\n      section.controlSetRows.forEach(row => {\n        row.forEach(control => {\n          if (!control) return;\n          if (typeof control === 'string') {\n            // For now, we have to look in controls.jsx to get the config for some controls.\n            // Once everything is migrated out, delete this if statement.\n            controlsMap[control] = controls[control];\n          } else if (control.name && control.config) {\n            // condition needed because there are elements, e.g. <hr /> in some control configs (I'm looking at you, FilterBox!)\n            controlsMap[control.name] = control.config;\n          }\n        });\n      });\n    });\n  return controlsMap;\n});\n\nconst getControlsForVizType = vizType => {\n  const controlPanel = getChartControlPanelRegistry().get(vizType);\n  return memoizedControls(vizType, controlPanel);\n};\n\nexport default getControlsForVizType;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEqual, isEmpty } from 'lodash';\nimport { styled, t } from '@superset-ui/core';\nimport { sanitizeFormData } from 'src/explore/exploreUtils/formData';\nimport getControlsForVizType from 'src/utils/getControlsForVizType';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from '../ModalTrigger';\nimport TableView from '../TableView';\n\nconst propTypes = {\n  origFormData: PropTypes.object.isRequired,\n  currentFormData: PropTypes.object.isRequired,\n};\n\nconst StyledLabel = styled.span`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.dark1};\n    background-color: ${theme.colors.alert.base};\n\n    &: hover {\n      background-color: ${theme.colors.alert.dark1};\n    }\n  `}\n`;\n\nfunction alterForComparison(value) {\n  // Considering `[]`, `{}`, `null` and `undefined` as identical\n  // for this purpose\n  if (value === undefined || value === null || value === '') {\n    return null;\n  }\n  if (typeof value === 'object') {\n    if (Array.isArray(value) && value.length === 0) {\n      return null;\n    }\n    const keys = Object.keys(value);\n    if (keys && keys.length === 0) {\n      return null;\n    }\n  }\n  return value;\n}\n\nexport default class AlteredSliceTag extends React.Component {\n  constructor(props) {\n    super(props);\n    const diffs = this.getDiffs(props);\n    const controlsMap = getControlsForVizType(this.props.origFormData.viz_type);\n    const rows = this.getRowsFromDiffs(diffs, controlsMap);\n\n    this.state = { rows, hasDiffs: !isEmpty(diffs), controlsMap };\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    // Update differences if need be\n    if (isEqual(this.props, newProps)) {\n      return;\n    }\n    const diffs = this.getDiffs(newProps);\n    this.setState(prevState => ({\n      rows: this.getRowsFromDiffs(diffs, prevState.controlsMap),\n      hasDiffs: !isEmpty(diffs),\n    }));\n  }\n\n  getRowsFromDiffs(diffs, controlsMap) {\n    return Object.entries(diffs).map(([key, diff]) => ({\n      control: (controlsMap[key] && controlsMap[key].label) || key,\n      before: this.formatValue(diff.before, key, controlsMap),\n      after: this.formatValue(diff.after, key, controlsMap),\n    }));\n  }\n\n  getDiffs(props) {\n    // Returns all properties that differ in the\n    // current form data and the saved form data\n    const ofd = sanitizeFormData(props.origFormData);\n    const cfd = sanitizeFormData(props.currentFormData);\n\n    const fdKeys = Object.keys(cfd);\n    const diffs = {};\n    fdKeys.forEach(fdKey => {\n      if (!ofd[fdKey] && !cfd[fdKey]) {\n        return;\n      }\n      if (['filters', 'having', 'having_filters', 'where'].includes(fdKey)) {\n        return;\n      }\n      if (!this.isEqualish(ofd[fdKey], cfd[fdKey])) {\n        diffs[fdKey] = { before: ofd[fdKey], after: cfd[fdKey] };\n      }\n    });\n    return diffs;\n  }\n\n  isEqualish(val1, val2) {\n    return isEqual(alterForComparison(val1), alterForComparison(val2));\n  }\n\n  formatValue(value, key, controlsMap) {\n    // Format display value based on the control type\n    // or the value type\n    if (value === undefined) {\n      return 'N/A';\n    }\n    if (value === null) {\n      return 'null';\n    }\n    if (controlsMap[key]?.type === 'AdhocFilterControl') {\n      if (!value.length) {\n        return '[]';\n      }\n      return value\n        .map(v => {\n          const filterVal =\n            v.comparator && v.comparator.constructor === Array\n              ? `[${v.comparator.join(', ')}]`\n              : v.comparator;\n          return `${v.subject} ${v.operator} ${filterVal}`;\n        })\n        .join(', ');\n    }\n    if (controlsMap[key]?.type === 'BoundsControl') {\n      return `Min: ${value[0]}, Max: ${value[1]}`;\n    }\n    if (controlsMap[key]?.type === 'CollectionControl') {\n      return value.map(v => safeStringify(v)).join(', ');\n    }\n    if (\n      controlsMap[key]?.type === 'MetricsControl' &&\n      value.constructor === Array\n    ) {\n      const formattedValue = value.map(v => v?.label ?? v);\n      return formattedValue.length ? formattedValue.join(', ') : '[]';\n    }\n    if (typeof value === 'boolean') {\n      return value ? 'true' : 'false';\n    }\n    if (value.constructor === Array) {\n      const formattedValue = value.map(v => v?.label ?? v);\n      return formattedValue.length ? formattedValue.join(', ') : '[]';\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n      return value;\n    }\n    return safeStringify(value);\n  }\n\n  renderModalBody() {\n    const columns = [\n      {\n        accessor: 'control',\n        Header: t('Control'),\n      },\n      {\n        accessor: 'before',\n        Header: t('Before'),\n      },\n      {\n        accessor: 'after',\n        Header: t('After'),\n      },\n    ];\n    // set the wrap text in the specific columns.\n    const columnsForWrapText = ['Control', 'Before', 'After'];\n\n    return (\n      <TableView\n        columns={columns}\n        data={this.state.rows}\n        pageSize={50}\n        className=\"table-condensed\"\n        columnsForWrapText={columnsForWrapText}\n      />\n    );\n  }\n\n  renderTriggerNode() {\n    return (\n      <Tooltip id=\"difference-tooltip\" title={t('Click to see difference')}>\n        <StyledLabel className=\"label\">{t('Altered')}</StyledLabel>\n      </Tooltip>\n    );\n  }\n\n  render() {\n    // Return nothing if there are no differences\n    if (!this.state.hasDiffs) {\n      return null;\n    }\n    // Render the label-warning 'Altered' tag which the user may\n    // click to open a modal containing a table summarizing the\n    // differences in the slice\n    return (\n      <ModalTrigger\n        triggerNode={this.renderTriggerNode()}\n        modalTitle={t('Chart changes')}\n        modalBody={this.renderModalBody()}\n        responsive\n      />\n    );\n  }\n}\n\nAlteredSliceTag.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'src/components/Tooltip';\nimport {\n  CategoricalColorNamespace,\n  css,\n  logging,\n  SupersetClient,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport AlteredSliceTag from 'src/components/AlteredSliceTag';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport { sliceUpdated } from 'src/explore/actions/exploreActions';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport MetadataBar, { MetadataType } from 'src/components/MetadataBar';\nimport { setSaveChartModalVisibility } from 'src/explore/actions/saveModalActions';\nimport { useExploreAdditionalActionsMenu } from '../useExploreAdditionalActionsMenu';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  canOverwrite: PropTypes.bool.isRequired,\n  canDownload: PropTypes.bool.isRequired,\n  dashboardId: PropTypes.number,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  formData: PropTypes.object,\n  ownState: PropTypes.object,\n  timeout: PropTypes.number,\n  chart: chartPropShape,\n  saveDisabled: PropTypes.bool,\n};\n\nconst saveButtonStyles = theme => css`\n  color: ${theme.colors.primary.dark2};\n  & > span[role='img'] {\n    margin-right: 0;\n  }\n`;\n\nconst additionalItemsStyles = theme => css`\n  display: flex;\n  align-items: center;\n  margin-left: ${theme.gridUnit}px;\n  & > span {\n    margin-right: ${theme.gridUnit * 3}px;\n  }\n`;\n\nexport const ExploreChartHeader = ({\n  dashboardId,\n  slice,\n  actions,\n  formData,\n  ownState,\n  chart,\n  user,\n  canOverwrite,\n  canDownload,\n  isStarred,\n  sliceName,\n  saveDisabled,\n  metadata,\n}) => {\n  const dispatch = useDispatch();\n  const { latestQueryFormData, sliceFormData } = chart;\n  const [isPropertiesModalOpen, setIsPropertiesModalOpen] = useState(false);\n\n  const updateCategoricalNamespace = async () => {\n    const { dashboards } = metadata || {};\n    const dashboard =\n      dashboardId && dashboards && dashboards.find(d => d.id === dashboardId);\n\n    if (dashboard) {\n      try {\n        // Dashboards from metadata don't contain the json_metadata field\n        // to avoid unnecessary payload. Here we query for the dashboard json_metadata.\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/dashboard/${dashboard.id}`,\n        });\n        const result = response?.json?.result;\n\n        // setting the chart to use the dashboard custom label colors if any\n        const metadata = JSON.parse(result.json_metadata);\n        const sharedLabelColors = metadata.shared_label_colors || {};\n        const customLabelColors = metadata.label_colors || {};\n        const mergedLabelColors = {\n          ...sharedLabelColors,\n          ...customLabelColors,\n        };\n\n        const categoricalNamespace = CategoricalColorNamespace.getNamespace();\n\n        Object.keys(mergedLabelColors).forEach(label => {\n          categoricalNamespace.setColor(\n            label,\n            mergedLabelColors[label],\n            metadata.color_scheme,\n          );\n        });\n      } catch (error) {\n        logging.info(t('Unable to retrieve dashboard colors'));\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (dashboardId) updateCategoricalNamespace();\n  }, []);\n\n  const openPropertiesModal = () => {\n    setIsPropertiesModalOpen(true);\n  };\n\n  const closePropertiesModal = () => {\n    setIsPropertiesModalOpen(false);\n  };\n\n  const showModal = useCallback(() => {\n    dispatch(setSaveChartModalVisibility(true));\n  }, [dispatch]);\n\n  const updateSlice = useCallback(\n    slice => {\n      dispatch(sliceUpdated(slice));\n    },\n    [dispatch],\n  );\n\n  const [menu, isDropdownVisible, setIsDropdownVisible] =\n    useExploreAdditionalActionsMenu(\n      latestQueryFormData,\n      canDownload,\n      slice,\n      actions.redirectSQLLab,\n      openPropertiesModal,\n      ownState,\n      metadata?.dashboards,\n    );\n\n  const metadataBar = useMemo(() => {\n    if (!metadata) {\n      return null;\n    }\n    const items = [];\n    items.push({\n      type: MetadataType.DASHBOARDS,\n      title:\n        metadata.dashboards.length > 0\n          ? tn(\n              'Added to 1 dashboard',\n              'Added to %s dashboards',\n              metadata.dashboards.length,\n              metadata.dashboards.length,\n            )\n          : t('Not added to any dashboard'),\n      description:\n        metadata.dashboards.length > 0\n          ? t(\n              'You can preview the list of dashboards in the chart settings dropdown.',\n            )\n          : undefined,\n    });\n    items.push({\n      type: MetadataType.LAST_MODIFIED,\n      value: metadata.changed_on_humanized,\n      modifiedBy: metadata.changed_by || t('Not available'),\n    });\n    items.push({\n      type: MetadataType.OWNER,\n      createdBy: metadata.created_by || t('Not available'),\n      owners: metadata.owners.length > 0 ? metadata.owners : t('None'),\n      createdOn: metadata.created_on_humanized,\n    });\n    if (slice?.description) {\n      items.push({\n        type: MetadataType.DESCRIPTION,\n        value: slice?.description,\n      });\n    }\n    return <MetadataBar items={items} tooltipPlacement=\"bottom\" />;\n  }, [metadata, slice?.description]);\n\n  const oldSliceName = slice?.slice_name;\n  return (\n    <>\n      <PageHeaderWithActions\n        editableTitleProps={{\n          title: sliceName,\n          canEdit:\n            !slice ||\n            canOverwrite ||\n            (slice?.owners || []).includes(user?.userId),\n          onSave: actions.updateChartTitle,\n          placeholder: t('Add the name of the chart'),\n          label: t('Chart title'),\n        }}\n        showTitlePanelItems={!!slice}\n        certificatiedBadgeProps={{\n          certifiedBy: slice?.certified_by,\n          details: slice?.certification_details,\n        }}\n        showFaveStar={!!user?.userId}\n        faveStarProps={{\n          itemId: slice?.slice_id,\n          fetchFaveStar: actions.fetchFaveStar,\n          saveFaveStar: actions.saveFaveStar,\n          isStarred,\n          showTooltip: true,\n        }}\n        titlePanelAdditionalItems={\n          <div css={additionalItemsStyles}>\n            {sliceFormData ? (\n              <AlteredSliceTag\n                className=\"altered\"\n                origFormData={{\n                  ...sliceFormData,\n                  chartTitle: oldSliceName,\n                }}\n                currentFormData={{ ...formData, chartTitle: sliceName }}\n              />\n            ) : null}\n            {metadataBar}\n          </div>\n        }\n        rightPanelAdditionalItems={\n          <Tooltip\n            title={\n              saveDisabled\n                ? t('Add required control values to save chart')\n                : null\n            }\n          >\n            {/* needed to wrap button in a div - antd tooltip doesn't work with disabled button */}\n            <div>\n              <Button\n                buttonStyle=\"secondary\"\n                onClick={showModal}\n                disabled={saveDisabled}\n                data-test=\"query-save-button\"\n                css={saveButtonStyles}\n              >\n                <Icons.SaveOutlined iconSize=\"l\" />\n                {t('Save')}\n              </Button>\n            </div>\n          </Tooltip>\n        }\n        additionalActionsMenu={menu}\n        menuDropdownProps={{\n          visible: isDropdownVisible,\n          onVisibleChange: setIsDropdownVisible,\n        }}\n      />\n      {isPropertiesModalOpen && (\n        <PropertiesModal\n          show={isPropertiesModalOpen}\n          onHide={closePropertiesModal}\n          onSave={updateSlice}\n          slice={slice}\n        />\n      )}\n    </>\n  );\n};\n\nExploreChartHeader.propTypes = propTypes;\n\nexport default ExploreChartHeader;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { styled, t, css, useTheme, logging } from '@superset-ui/core';\nimport { debounce, pick } from 'lodash';\nimport { Resizable } from 're-resizable';\nimport { useChangeEffect } from 'src/hooks/useChangeEffect';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport { Global } from '@emotion/react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { usePrevious } from 'src/hooks/usePrevious';\nimport { useComponentDidMount } from 'src/hooks/useComponentDidMount';\nimport Icons from 'src/components/Icons';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport { RESERVED_CHART_URL_PARAMS, URL_PARAMS } from 'src/constants';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport * as logActions from 'src/logger/actions';\nimport {\n  LOG_ACTIONS_MOUNT_EXPLORER,\n  LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\n} from 'src/logger/LogUtils';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport cx from 'classnames';\nimport * as chartActions from 'src/components/Chart/chartAction';\nimport { fetchDatasourceMetadata } from 'src/dashboard/actions/datasources';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport { mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { postFormData, putFormData } from 'src/explore/exploreUtils/formData';\nimport { datasourcesActions } from 'src/explore/actions/datasourcesActions';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { getFormDataFromControls } from 'src/explore/controlUtils';\nimport * as exploreActions from 'src/explore/actions/exploreActions';\nimport * as saveModalActions from 'src/explore/actions/saveModalActions';\nimport { useTabId } from 'src/hooks/useTabId';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport ExploreChartPanel from '../ExploreChartPanel';\nimport ConnectedControlPanelsContainer from '../ControlPanelsContainer';\nimport SaveModal from '../SaveModal';\nimport DataSourcePanel from '../DatasourcePanel';\nimport ConnectedExploreChartHeader from '../ExploreChartHeader';\n\nconst propTypes = {\n  ...ExploreChartPanel.propTypes,\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.bool.isRequired,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string,\n  vizType: PropTypes.string,\n  saveAction: PropTypes.string,\n  isSaveModalVisible: PropTypes.bool,\n};\n\nconst ExploreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-height: 0;\n`;\n\nconst ExplorePanelContainer = styled.div`\n  ${({ theme }) => css`\n    background: ${theme.colors.grayscale.light5};\n    text-align: left;\n    position: relative;\n    width: 100%;\n    max-height: 100%;\n    min-height: 0;\n    display: flex;\n    flex: 1;\n    flex-wrap: nowrap;\n    border-top: 1px solid ${theme.colors.grayscale.light2};\n    .explore-column {\n      display: flex;\n      flex-direction: column;\n      padding: ${theme.gridUnit * 2}px 0;\n      max-height: 100%;\n    }\n    .data-source-selection {\n      background-color: ${theme.colors.grayscale.light5};\n      padding: ${theme.gridUnit * 2}px 0;\n      border-right: 1px solid ${theme.colors.grayscale.light2};\n    }\n    .main-explore-content {\n      flex: 1;\n      min-width: ${theme.gridUnit * 128}px;\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      padding: 0 ${theme.gridUnit * 4}px;\n      .panel {\n        margin-bottom: 0;\n      }\n    }\n    .controls-column {\n      align-self: flex-start;\n      padding: 0;\n    }\n    .title-container {\n      position: relative;\n      display: flex;\n      flex-direction: row;\n      padding: 0 ${theme.gridUnit * 2}px 0 ${theme.gridUnit * 4}px;\n      justify-content: space-between;\n      .horizontal-text {\n        font-size: ${theme.typography.sizes.m}px;\n      }\n    }\n    .no-show {\n      display: none;\n    }\n    .vertical-text {\n      writing-mode: vertical-rl;\n      text-orientation: mixed;\n    }\n    .sidebar {\n      height: 100%;\n      background-color: ${theme.colors.grayscale.light4};\n      padding: ${theme.gridUnit * 2}px;\n      width: ${theme.gridUnit * 8}px;\n    }\n    .collapse-icon > svg {\n      color: ${theme.colors.primary.base};\n    }\n  `};\n`;\n\nconst updateHistory = debounce(\n  async (\n    formData,\n    datasourceId,\n    datasourceType,\n    isReplace,\n    standalone,\n    force,\n    title,\n    tabId,\n  ) => {\n    const payload = { ...formData };\n    const chartId = formData.slice_id;\n    const params = new URLSearchParams(window.location.search);\n    const additionalParam = Object.fromEntries(params);\n\n    if (chartId) {\n      additionalParam[URL_PARAMS.sliceId.name] = chartId;\n    } else {\n      additionalParam[URL_PARAMS.datasourceId.name] = datasourceId;\n      additionalParam[URL_PARAMS.datasourceType.name] = datasourceType;\n    }\n\n    const urlParams = payload?.url_params || {};\n    Object.entries(urlParams).forEach(([key, value]) => {\n      if (!RESERVED_CHART_URL_PARAMS.includes(key)) {\n        additionalParam[key] = value;\n      }\n    });\n\n    try {\n      let key;\n      let stateModifier;\n      if (isReplace) {\n        key = await postFormData(\n          datasourceId,\n          datasourceType,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'replaceState';\n      } else {\n        key = getUrlParam(URL_PARAMS.formDataKey);\n        await putFormData(\n          datasourceId,\n          datasourceType,\n          key,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'pushState';\n      }\n      // avoid race condition in case user changes route before explore updates the url\n      if (window.location.pathname.startsWith('/explore')) {\n        const url = mountExploreUrl(\n          standalone ? URL_PARAMS.standalone.name : null,\n          {\n            [URL_PARAMS.formDataKey.name]: key,\n            ...additionalParam,\n          },\n          force,\n        );\n        window.history[stateModifier](payload, title, url);\n      }\n    } catch (e) {\n      logging.warn('Failed at altering browser history', e);\n    }\n  },\n  1000,\n);\n\nfunction ExploreViewContainer(props) {\n  const dynamicPluginContext = usePluginContext();\n  const dynamicPlugin = dynamicPluginContext.dynamicPlugins[props.vizType];\n  const isDynamicPluginLoading = dynamicPlugin && dynamicPlugin.mounting;\n  const wasDynamicPluginLoading = usePrevious(isDynamicPluginLoading);\n\n  /** the state of controls in the previous render */\n  const previousControls = usePrevious(props.controls);\n  /** the state of controls last time a query was triggered */\n  const [lastQueriedControls, setLastQueriedControls] = useState(\n    props.controls,\n  );\n\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [shouldForceUpdate, setShouldForceUpdate] = useState(-1);\n  const tabId = useTabId();\n\n  const theme = useTheme();\n\n  const defaultSidebarsWidth = {\n    controls_width: 320,\n    datasource_width: 300,\n  };\n\n  const addHistory = useCallback(\n    async ({ isReplace = false, title } = {}) => {\n      const formData = props.dashboardId\n        ? {\n            ...props.form_data,\n            dashboardId: props.dashboardId,\n          }\n        : props.form_data;\n      const { id: datasourceId, type: datasourceType } = props.datasource;\n\n      updateHistory(\n        formData,\n        datasourceId,\n        datasourceType,\n        isReplace,\n        props.standalone,\n        props.force,\n        title,\n        tabId,\n      );\n    },\n    [\n      props.dashboardId,\n      props.form_data,\n      props.datasource.id,\n      props.datasource.type,\n      props.standalone,\n      props.force,\n      tabId,\n    ],\n  );\n\n  const handlePopstate = useCallback(() => {\n    const formData = window.history.state;\n    if (formData && Object.keys(formData).length) {\n      props.actions.setExploreControls(formData);\n      props.actions.postChartFormData(\n        formData,\n        props.force,\n        props.timeout,\n        props.chart.id,\n      );\n    }\n  }, [props.actions, props.chart.id, props.timeout]);\n\n  const onQuery = useCallback(() => {\n    props.actions.setForceQuery(false);\n    props.actions.triggerQuery(true, props.chart.id);\n    addHistory();\n    setLastQueriedControls(props.controls);\n  }, [props.controls, addHistory, props.actions, props.chart.id]);\n\n  const handleKeydown = useCallback(\n    event => {\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      if (controlOrCommand) {\n        const isEnter = event.key === 'Enter' || event.keyCode === 13;\n        const isS = event.key === 's' || event.keyCode === 83;\n        if (isEnter) {\n          onQuery();\n        } else if (isS) {\n          if (props.slice) {\n            props.actions\n              .saveSlice(props.form_data, {\n                action: 'overwrite',\n                slice_id: props.slice.slice_id,\n                slice_name: props.slice.slice_name,\n                add_to_dash: 'noSave',\n                goto_dash: false,\n              })\n              .then(({ data }) => {\n                window.location = data.slice.slice_url;\n              });\n          }\n        }\n      }\n    },\n    [onQuery, props.actions, props.form_data, props.slice],\n  );\n\n  function onStop() {\n    if (props.chart && props.chart.queryController) {\n      props.chart.queryController.abort();\n    }\n  }\n\n  function toggleCollapse() {\n    setIsCollapsed(!isCollapsed);\n  }\n\n  useComponentDidMount(() => {\n    props.actions.logEvent(LOG_ACTIONS_MOUNT_EXPLORER);\n  });\n\n  useChangeEffect(tabId, (previous, current) => {\n    if (current) {\n      addHistory({ isReplace: true });\n    }\n  });\n\n  const previousHandlePopstate = usePrevious(handlePopstate);\n  useEffect(() => {\n    if (previousHandlePopstate) {\n      window.removeEventListener('popstate', previousHandlePopstate);\n    }\n    window.addEventListener('popstate', handlePopstate);\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [handlePopstate, previousHandlePopstate]);\n\n  const previousHandleKeyDown = usePrevious(handleKeydown);\n  useEffect(() => {\n    if (previousHandleKeyDown) {\n      window.removeEventListener('keydown', previousHandleKeyDown);\n    }\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [handleKeydown, previousHandleKeyDown]);\n\n  useEffect(() => {\n    if (wasDynamicPluginLoading && !isDynamicPluginLoading) {\n      // reload the controls now that we actually have the control config\n      props.actions.dynamicPluginControlsReady();\n    }\n  }, [isDynamicPluginLoading]);\n\n  useEffect(() => {\n    const hasError = Object.values(props.controls).some(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (!hasError) {\n      props.actions.triggerQuery(true, props.chart.id);\n    }\n  }, []);\n\n  const reRenderChart = useCallback(\n    controlsChanged => {\n      const newQueryFormData = controlsChanged\n        ? {\n            ...props.chart.latestQueryFormData,\n            ...getFormDataFromControls(pick(props.controls, controlsChanged)),\n          }\n        : getFormDataFromControls(props.controls);\n      props.actions.updateQueryFormData(newQueryFormData, props.chart.id);\n      props.actions.renderTriggered(new Date().getTime(), props.chart.id);\n      addHistory();\n    },\n    [\n      addHistory,\n      props.actions,\n      props.chart.id,\n      props.chart.latestQueryFormData,\n      props.controls,\n    ],\n  );\n\n  // effect to run when controls change\n  useEffect(() => {\n    if (\n      previousControls &&\n      props.chart.latestQueryFormData.viz_type === props.controls.viz_type.value\n    ) {\n      if (\n        props.controls.datasource &&\n        (previousControls.datasource == null ||\n          props.controls.datasource.value !== previousControls.datasource.value)\n      ) {\n        // this should really be handled by actions\n        fetchDatasourceMetadata(props.form_data.datasource, true);\n      }\n\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof previousControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            previousControls[key].value,\n          ),\n      );\n\n      // this should also be handled by the actions that are actually changing the controls\n      const displayControlsChanged = changedControlKeys.filter(\n        key => props.controls[key].renderTrigger,\n      );\n      if (displayControlsChanged.length > 0) {\n        reRenderChart(displayControlsChanged);\n      }\n    }\n  }, [props.controls, props.ownState]);\n\n  const chartIsStale = useMemo(() => {\n    if (lastQueriedControls) {\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof lastQueriedControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            lastQueriedControls[key].value,\n            { ignoreFields: ['datasourceWarning'] },\n          ),\n      );\n\n      return changedControlKeys.some(\n        key =>\n          !props.controls[key].renderTrigger &&\n          !props.controls[key].dontRefreshOnChange,\n      );\n    }\n    return false;\n  }, [lastQueriedControls, props.controls]);\n\n  useChangeEffect(props.saveAction, () => {\n    if (['saveas', 'overwrite'].includes(props.saveAction)) {\n      onQuery();\n      addHistory({ isReplace: true });\n      props.actions.setSaveAction(null);\n    }\n  });\n\n  useEffect(() => {\n    if (props.ownState !== undefined) {\n      onQuery();\n      reRenderChart();\n    }\n  }, [props.ownState]);\n\n  if (chartIsStale) {\n    props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n  }\n\n  const errorMessage = useMemo(() => {\n    const controlsWithErrors = Object.values(props.controls).filter(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (controlsWithErrors.length === 0) {\n      return null;\n    }\n\n    const errorMessages = controlsWithErrors.map(\n      control => control.validationErrors,\n    );\n    const uniqueErrorMessages = [...new Set(errorMessages.flat())];\n\n    const errors = uniqueErrorMessages\n      .map(message => {\n        const matchingLabels = controlsWithErrors\n          .filter(control => control.validationErrors?.includes(message))\n          .map(control => control.label);\n        return [matchingLabels, message];\n      })\n      .map(([labels, message]) => (\n        <div key={message}>\n          {labels.length > 1 ? t('Controls labeled ') : t('Control labeled ')}\n          <strong>{` ${labels.join(', ')}`}</strong>\n          <span>: {message}</span>\n        </div>\n      ));\n\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = <div style={{ textAlign: 'left' }}>{errors}</div>;\n    }\n    return errorMessage;\n  }, [props.controls]);\n\n  function renderChartContainer() {\n    return (\n      <ExploreChartPanel\n        {...props}\n        errorMessage={errorMessage}\n        chartIsStale={chartIsStale}\n        onQuery={onQuery}\n      />\n    );\n  }\n\n  function getSidebarWidths(key) {\n    return getItem(key, defaultSidebarsWidth[key]);\n  }\n\n  function setSidebarWidths(key, dimension) {\n    const newDimension = Number(getSidebarWidths(key)) + dimension.width;\n    setItem(key, newDimension);\n  }\n\n  if (props.standalone) {\n    return renderChartContainer();\n  }\n\n  return (\n    <ExploreContainer>\n      <ConnectedExploreChartHeader\n        actions={props.actions}\n        canOverwrite={props.can_overwrite}\n        canDownload={props.can_download}\n        dashboardId={props.dashboardId}\n        isStarred={props.isStarred}\n        slice={props.slice}\n        sliceName={props.sliceName}\n        table_name={props.table_name}\n        formData={props.form_data}\n        chart={props.chart}\n        ownState={props.ownState}\n        user={props.user}\n        reports={props.reports}\n        saveDisabled={errorMessage || props.chart.chartStatus === 'loading'}\n        metadata={props.metadata}\n      />\n      <ExplorePanelContainer id=\"explore-container\">\n        <Global\n          styles={css`\n            .navbar {\n              margin-bottom: 0;\n            }\n            body {\n              height: 100vh;\n              max-height: 100vh;\n              overflow: hidden;\n            }\n            #app-menu,\n            #app {\n              flex: 1 1 auto;\n            }\n            #app {\n              flex-basis: 100%;\n              overflow: hidden;\n              height: 100%;\n            }\n            #app-menu {\n              flex-shrink: 0;\n            }\n          `}\n        />\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) => {\n            setShouldForceUpdate(d?.width);\n            setSidebarWidths(LocalStorageKeys.datasource_width, d);\n          }}\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.datasource_width),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.datasource_width]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className={\n            isCollapsed ? 'no-show' : 'explore-column data-source-selection'\n          }\n        >\n          <div className=\"title-container\">\n            <span className=\"horizontal-text\">{t('Chart Source')}</span>\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"action-button\"\n              onClick={toggleCollapse}\n            >\n              <Icons.Expand\n                className=\"collapse-icon\"\n                iconColor={theme.colors.primary.base}\n                iconSize=\"l\"\n              />\n            </span>\n          </div>\n          <DataSourcePanel\n            formData={props.form_data}\n            datasource={props.datasource}\n            controls={props.controls}\n            actions={props.actions}\n            shouldForceUpdate={shouldForceUpdate}\n            user={props.user}\n          />\n        </Resizable>\n        {isCollapsed ? (\n          <div\n            className=\"sidebar\"\n            onClick={toggleCollapse}\n            data-test=\"open-datasource-tab\"\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span role=\"button\" tabIndex={0} className=\"action-button\">\n              <Tooltip title={t('Open Datasource tab')}>\n                <Icons.Collapse\n                  className=\"collapse-icon\"\n                  iconColor={theme.colors.primary.base}\n                  iconSize=\"l\"\n                />\n              </Tooltip>\n            </span>\n          </div>\n        ) : null}\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) =>\n            setSidebarWidths(LocalStorageKeys.controls_width, d)\n          }\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.controls_width),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.controls_width]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className=\"col-sm-3 explore-column controls-column\"\n        >\n          <ConnectedControlPanelsContainer\n            exploreState={props.exploreState}\n            actions={props.actions}\n            form_data={props.form_data}\n            controls={props.controls}\n            chart={props.chart}\n            datasource_type={props.datasource_type}\n            isDatasourceMetaLoading={props.isDatasourceMetaLoading}\n            onQuery={onQuery}\n            onStop={onStop}\n            canStopQuery={props.can_add || props.can_overwrite}\n            errorMessage={errorMessage}\n            chartIsStale={chartIsStale}\n          />\n        </Resizable>\n        <div\n          className={cx(\n            'main-explore-content',\n            isCollapsed ? 'col-sm-9' : 'col-sm-7',\n          )}\n        >\n          {renderChartContainer()}\n        </div>\n      </ExplorePanelContainer>\n      {props.isSaveModalVisible && (\n        <SaveModal\n          addDangerToast={props.addDangerToast}\n          actions={props.actions}\n          form_data={props.form_data}\n          sliceName={props.sliceName}\n          dashboardId={props.dashboardId}\n        />\n      )}\n    </ExploreContainer>\n  );\n}\n\nExploreViewContainer.propTypes = propTypes;\n\nfunction mapStateToProps(state) {\n  const {\n    explore,\n    charts,\n    common,\n    impressionId,\n    dataMask,\n    reports,\n    user,\n    saveModal,\n  } = state;\n  const { controls, slice, datasource, metadata } = explore;\n  const form_data = getFormDataFromControls(controls);\n  const slice_id = form_data.slice_id ?? slice?.slice_id ?? 0; // 0 - unsaved chart\n  form_data.extra_form_data = mergeExtraFormData(\n    { ...form_data.extra_form_data },\n    {\n      ...dataMask[slice_id]?.ownState,\n    },\n  );\n  const chart = charts[slice_id];\n\n  let dashboardId = Number(explore.form_data?.dashboardId);\n  if (Number.isNaN(dashboardId)) {\n    dashboardId = undefined;\n  }\n\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource,\n    datasource_type: datasource.type,\n    datasourceId: datasource.datasource_id,\n    dashboardId,\n    controls: explore.controls,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    can_overwrite: !!explore.can_overwrite,\n    column_formats: datasource?.column_formats ?? null,\n    containerId: slice\n      ? `slice-container-${slice.slice_id}`\n      : 'slice-container',\n    isStarred: explore.isStarred,\n    slice,\n    sliceName: explore.sliceName ?? slice?.slice_name ?? null,\n    triggerRender: explore.triggerRender,\n    form_data,\n    table_name: datasource.table_name,\n    vizType: form_data.viz_type,\n    standalone: !!explore.standalone,\n    force: !!explore.force,\n    chart,\n    timeout: common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    ownState: dataMask[slice_id]?.ownState,\n    impressionId,\n    user,\n    exploreState: explore,\n    reports,\n    metadata,\n    saveAction: explore.saveAction,\n    isSaveModalVisible: saveModal.isVisible,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = {\n    ...exploreActions,\n    ...datasourcesActions,\n    ...saveModalActions,\n    ...chartActions,\n    ...logActions,\n  };\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withToasts(React.memo(ExploreViewContainer)));\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { DatasourceType, t } from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  ColumnOption,\n  ControlConfig,\n  ControlPanelSectionConfig,\n} from '@superset-ui/chart-controls';\nimport { ExplorePageInitialData } from './types';\n\nexport const controlPanelSectionsChartOptions: (ControlPanelSectionConfig | null)[] =\n  [\n    null,\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          'color_scheme',\n          {\n            name: 'rose_area_proportion',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Use Area Proportions'),\n              description: t(\n                'Check if the Rose Chart should use segment area instead of ' +\n                  'segment radius for proportioning',\n              ),\n              default: false,\n              renderTrigger: true,\n            },\n          },\n        ],\n        [\n          {\n            name: 'stacked_style',\n            config: {\n              type: 'SelectControl',\n              label: t('Stacked Style'),\n              renderTrigger: true,\n              choices: [\n                ['stack', t('stack')],\n                ['stream', t('stream')],\n                ['expand', t('expand')],\n              ],\n              default: 'stack',\n              description: '',\n            },\n          },\n        ],\n      ],\n    },\n  ];\n\nexport const controlPanelSectionsChartOptionsOnlyColorScheme: ControlPanelSectionConfig[] =\n  [\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [['color_scheme']],\n    },\n  ];\n\nexport const controlPanelSectionsChartOptionsTable: ControlPanelSectionConfig[] =\n  [\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          'metric',\n          'metrics',\n          {\n            name: 'all_columns',\n            config: {\n              type: 'SelectControl',\n              multi: true,\n              label: t('Columns'),\n              default: [],\n              description: t('Columns to display'),\n              optionRenderer: c => <ColumnOption column={c} showType />,\n              valueKey: 'column_name',\n              mapStateToProps: stateRef => ({\n                options: stateRef.datasource?.columns || [],\n              }),\n              freeForm: true,\n            } as ControlConfig<'SelectControl', ColumnMeta>,\n          },\n        ],\n      ],\n    },\n  ];\n\nexport const exploreInitialData: ExplorePageInitialData = {\n  form_data: {\n    datasource: '8__table',\n    metric: 'count',\n    slice_id: 371,\n    viz_type: 'table',\n  },\n  slice: {\n    cache_timeout: null,\n    description: null,\n    slice_id: 371,\n    slice_name: 'Age distribution of respondents',\n    is_managed_externally: false,\n    form_data: {\n      datasource: '8__table',\n      metric: 'count',\n      slice_id: 371,\n      viz_type: 'table',\n    },\n  },\n  dataset: {\n    id: 8,\n    type: DatasourceType.Table,\n    columns: [{ column_name: 'a' }],\n    metrics: [{ metric_name: 'first' }, { metric_name: 'second' }],\n    column_format: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    datasource_name: '8__table',\n    description: null,\n  },\n};\n\nexport const fallbackExploreInitialData: ExplorePageInitialData = {\n  form_data: {\n    datasource: '0__table',\n    viz_type: 'table',\n  },\n  dataset: {\n    id: 0,\n    type: DatasourceType.Table,\n    columns: [],\n    metrics: [],\n    column_format: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    owners: [],\n    datasource_name: 'missing_datasource',\n    name: 'missing_datasource',\n    description: null,\n  },\n  slice: null,\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport isEqual from 'lodash/isEqual';\nimport {\n  EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS,\n  EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS,\n  isDefined,\n  JsonObject,\n  ensureIsArray,\n  QueryObjectFilterClause,\n  SimpleAdhocFilter,\n  QueryFormData,\n  AdhocFilter,\n  isFreeFormAdhocFilter,\n  isSimpleAdhocFilter,\n  NO_TIME_RANGE,\n} from '@superset-ui/core';\n\nconst simpleFilterToAdhoc = (\n  filterClause: QueryObjectFilterClause,\n  clause = 'where',\n) => {\n  const result = {\n    clause: clause.toUpperCase(),\n    expressionType: 'SIMPLE',\n    operator: filterClause.op,\n    subject: filterClause.col,\n    comparator: 'val' in filterClause ? filterClause.val : undefined,\n  } as SimpleAdhocFilter;\n  if (filterClause.isExtra) {\n    Object.assign(result, {\n      isExtra: true,\n      filterOptionName: `filter_${Math.random()\n        .toString(36)\n        .substring(2, 15)}_${Math.random().toString(36).substring(2, 15)}`,\n    });\n  }\n  return result;\n};\n\nconst removeAdhocFilterDuplicates = (filters: AdhocFilter[]) => {\n  const isDuplicate = (\n    adhocFilter: AdhocFilter,\n    existingFilters: AdhocFilter[],\n  ) =>\n    existingFilters.some(\n      (existingFilter: AdhocFilter) =>\n        (isFreeFormAdhocFilter(existingFilter) &&\n          isFreeFormAdhocFilter(adhocFilter) &&\n          existingFilter.clause === adhocFilter.clause &&\n          existingFilter.sqlExpression === adhocFilter.sqlExpression) ||\n        (isSimpleAdhocFilter(existingFilter) &&\n          isSimpleAdhocFilter(adhocFilter) &&\n          existingFilter.operator === adhocFilter.operator &&\n          existingFilter.subject === adhocFilter.subject &&\n          ((!('comparator' in existingFilter) &&\n            !('comparator' in adhocFilter)) ||\n            ('comparator' in existingFilter &&\n              'comparator' in adhocFilter &&\n              isEqual(existingFilter.comparator, adhocFilter.comparator)))),\n    );\n\n  return filters.reduce((acc, filter) => {\n    if (!isDuplicate(filter, acc)) {\n      acc.push(filter);\n    }\n    return acc;\n  }, [] as AdhocFilter[]);\n};\n\nconst mergeFilterBoxToFormData = (\n  exploreFormData: QueryFormData,\n  dashboardFormData: JsonObject,\n) => {\n  const dateColumns = {\n    __time_range: 'time_range',\n    __time_col: 'granularity_sqla',\n    __time_grain: 'time_grain_sqla',\n    __granularity: 'granularity',\n  };\n  const appliedTimeExtras = {};\n\n  const filterBoxData: JsonObject = {};\n  ensureIsArray(dashboardFormData.extra_filters).forEach(filter => {\n    if (dateColumns[filter.col]) {\n      if (filter.val !== NO_TIME_RANGE) {\n        filterBoxData[dateColumns[filter.col]] = filter.val;\n        appliedTimeExtras[filter.col] = filter.val;\n      }\n    } else {\n      const adhocFilter = simpleFilterToAdhoc({\n        ...(filter as QueryObjectFilterClause),\n        isExtra: true,\n      });\n      filterBoxData.adhoc_filters = [\n        ...ensureIsArray(filterBoxData.adhoc_filters),\n        adhocFilter,\n      ];\n    }\n  });\n  filterBoxData.applied_time_extras = appliedTimeExtras;\n  return filterBoxData;\n};\n\nconst mergeNativeFiltersToFormData = (\n  exploreFormData: QueryFormData,\n  dashboardFormData: JsonObject,\n) => {\n  const nativeFiltersData: JsonObject = {};\n  const extraFormData = dashboardFormData.extra_form_data || {};\n\n  Object.entries(EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS).forEach(\n    ([srcKey, targetKey]) => {\n      const val = extraFormData[srcKey];\n      if (isDefined(val)) {\n        nativeFiltersData[targetKey] = val;\n      }\n    },\n  );\n\n  if ('time_grain_sqla' in extraFormData) {\n    nativeFiltersData.time_grain_sqla = extraFormData.time_grain_sqla;\n  }\n  if ('granularity_sqla' in extraFormData) {\n    nativeFiltersData.granularity_sqla = extraFormData.granularity_sqla;\n  }\n\n  const extras = dashboardFormData.extras || {};\n  EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS.forEach(key => {\n    const val = extraFormData[key];\n    if (isDefined(val)) {\n      extras[key] = val;\n    }\n  });\n  if (Object.keys(extras).length) {\n    nativeFiltersData.extras = extras;\n  }\n\n  nativeFiltersData.adhoc_filters = ensureIsArray(\n    extraFormData.adhoc_filters,\n  ).map(filter => ({\n    ...filter,\n    isExtra: true,\n  }));\n\n  const appendFilters = ensureIsArray(extraFormData.filters).map(extraFilter =>\n    simpleFilterToAdhoc({ ...extraFilter, isExtra: true }),\n  );\n  Object.keys(exploreFormData).forEach(key => {\n    if (key.match(/adhoc_filter.*/)) {\n      nativeFiltersData[key] = [\n        ...ensureIsArray(nativeFiltersData[key]),\n        ...appendFilters,\n      ];\n    }\n  });\n  return nativeFiltersData;\n};\n\nconst applyTimeRangeFilters = (\n  dashboardFormData: JsonObject,\n  adhocFilters: AdhocFilter[],\n) => {\n  const extraFormData = dashboardFormData.extra_form_data || {};\n  if ('time_range' in extraFormData) {\n    return adhocFilters.map((filter: SimpleAdhocFilter) => {\n      if (filter.operator === 'TEMPORAL_RANGE') {\n        return {\n          ...filter,\n          comparator: extraFormData.time_range,\n          isExtra: true,\n        };\n      }\n      return filter;\n    });\n  }\n  return adhocFilters;\n};\n\nexport const getFormDataWithDashboardContext = (\n  exploreFormData: QueryFormData,\n  dashboardContextFormData: JsonObject,\n) => {\n  const filterBoxData = mergeFilterBoxToFormData(\n    exploreFormData,\n    dashboardContextFormData,\n  );\n  const nativeFiltersData = mergeNativeFiltersToFormData(\n    exploreFormData,\n    dashboardContextFormData,\n  );\n  const adhocFilters = [\n    ...Object.keys(exploreFormData),\n    ...Object.keys(filterBoxData),\n    ...Object.keys(nativeFiltersData),\n  ]\n    .filter(key => key.match(/adhoc_filter.*/))\n    .reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: applyTimeRangeFilters(\n          dashboardContextFormData,\n          removeAdhocFilterDuplicates([\n            ...ensureIsArray(exploreFormData[key]),\n            ...ensureIsArray(filterBoxData[key]),\n            ...ensureIsArray(nativeFiltersData[key]),\n          ]),\n        ),\n      }),\n      {},\n    );\n\n  return {\n    ...exploreFormData,\n    ...dashboardContextFormData,\n    ...filterBoxData,\n    ...nativeFiltersData,\n    ...adhocFilters,\n  };\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n  getSharedLabelColor,\n  isDefined,\n  JsonObject,\n  makeApi,\n  SharedLabelColorSource,\n  t,\n} from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport getFormDataWithExtraFilters from 'src/dashboard/util/charts/getFormDataWithExtraFilters';\nimport { getAppliedFilterValues } from 'src/dashboard/util/activeDashboardFilters';\nimport { getParsedExploreURLParams } from './exploreUtils/getParsedExploreURLParams';\nimport { hydrateExplore } from './actions/hydrateExplore';\nimport ExploreViewContainer from './components/ExploreViewContainer';\nimport { ExploreResponsePayload, SaveActionType } from './types';\nimport { fallbackExploreInitialData } from './fixtures';\nimport { getItem, LocalStorageKeys } from '../utils/localStorageHelpers';\nimport { getFormDataWithDashboardContext } from './controlUtils/getFormDataWithDashboardContext';\n\nconst isValidResult = (rv: JsonObject): boolean =>\n  rv?.result?.form_data && isDefined(rv?.result?.dataset?.id);\n\nconst fetchExploreData = async (exploreUrlParams: URLSearchParams) => {\n  try {\n    const rv = await makeApi<{}, ExploreResponsePayload>({\n      method: 'GET',\n      endpoint: 'api/v1/explore/',\n    })(exploreUrlParams);\n    if (isValidResult(rv)) {\n      return rv;\n    }\n    let message = t('Failed to load chart data');\n    const responseError = rv?.result?.message;\n    if (responseError) {\n      message = `${message}:\\n${responseError}`;\n    }\n    throw new Error(message);\n  } catch (err) {\n    // todo: encapsulate the error handler\n    const clientError = await getClientErrorObject(err);\n    throw new Error(\n      clientError.message ||\n        clientError.error ||\n        t('Failed to load chart data.'),\n    );\n  }\n};\n\nconst getDashboardPageContext = (pageId?: string | null) => {\n  if (!pageId) {\n    return null;\n  }\n  return (\n    getItem(LocalStorageKeys.dashboard__explore_context, {})[pageId] || null\n  );\n};\n\nconst getDashboardContextFormData = () => {\n  const dashboardPageId = getUrlParam(URL_PARAMS.dashboardPageId);\n  const dashboardContext = getDashboardPageContext(dashboardPageId);\n  if (dashboardContext) {\n    const sliceId = getUrlParam(URL_PARAMS.sliceId) || 0;\n    const {\n      labelColors,\n      sharedLabelColors,\n      colorScheme,\n      chartConfiguration,\n      nativeFilters,\n      filterBoxFilters,\n      dataMask,\n      dashboardId,\n    } = dashboardContext;\n    const dashboardContextWithFilters = getFormDataWithExtraFilters({\n      chart: { id: sliceId },\n      filters: getAppliedFilterValues(sliceId, filterBoxFilters),\n      nativeFilters,\n      chartConfiguration,\n      colorScheme,\n      dataMask,\n      labelColors,\n      sharedLabelColors,\n      sliceId,\n      allSliceIds: [sliceId],\n      extraControls: {},\n    });\n    Object.assign(dashboardContextWithFilters, { dashboardId });\n    return dashboardContextWithFilters;\n  }\n  return null;\n};\n\nexport default function ExplorePage() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const isExploreInitialized = useRef(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const exploreUrlParams = getParsedExploreURLParams(location);\n    const saveAction = getUrlParam(\n      URL_PARAMS.saveAction,\n    ) as SaveActionType | null;\n    const dashboardContextFormData = getDashboardContextFormData();\n    if (!isExploreInitialized.current || !!saveAction) {\n      fetchExploreData(exploreUrlParams)\n        .then(({ result }) => {\n          const formData = dashboardContextFormData\n            ? getFormDataWithDashboardContext(\n                result.form_data,\n                dashboardContextFormData,\n              )\n            : result.form_data;\n          dispatch(\n            hydrateExplore({\n              ...result,\n              form_data: formData,\n              saveAction,\n            }),\n          );\n        })\n        .catch(err => {\n          dispatch(hydrateExplore(fallbackExploreInitialData));\n          dispatch(addDangerToast(err.message));\n        })\n        .finally(() => {\n          setIsLoaded(true);\n          isExploreInitialized.current = true;\n        });\n    }\n    getSharedLabelColor().source = SharedLabelColorSource.explore;\n  }, [dispatch, location]);\n\n  if (!isLoaded) {\n    return <Loading />;\n  }\n  return <ExploreViewContainer />;\n}\n"],"names":["rankings","CASE_SENSITIVE_EQUAL","EQUAL","STARTS_WITH","WORD_STARTS_WITH","CONTAINS","ACRONYM","MATCHES","NO_MATCH","matchSorter","defaultBaseSortFn","a","b","String","rankedValue","localeCompare","items","value","options","_options","keys","_options$threshold","threshold","_options$baseSort","baseSort","_options$sorter","sorter","matchedItems","sort","aRank","rank","aKeyIndex","keyIndex","bRank","bKeyIndex","sortRankedValues","reduce","matches","item","index","rankingInfo","allValues","j","J","length","key","attributes","getKeyAttributes","itemValues","getItemValues","i","I","push","itemValue","getAllValuesToRank","_ref2","_ref3","keyThreshold","newRank","getMatchRanking","newRankedValue","minRanking","maxRanking","getHighestRanking","_rankingInfo$keyThres","map","_ref","testString","stringToRank","prepareValueForComparison","toLowerCase","startsWith","includes","string","acronym","split","forEach","wordInString","splitByHyphenWord","substr","matchingInOrderCharCount","charNumber","findMatchingCharacter","matchChar","spreadPercentage","inOrderPercentage","firstIndex","getClosenessRanking","_ref4","keepDiacritics","Object","hasOwnProperty","call","path","values","nestedKey","nestedValues","nestedItem","nestedValue","concat","Array","isArray","result","apply","getNestedValues","defaultKeyAttributes","Infinity","characterMap","chars","join","allAccents","RegExp","firstAccent","removeAccents","replace","match","module","exports","has","remove","EXPLORE_URL_SEARCH_PARAMS","form_data","name","parser","formData","formDataObject","JSON","parse","datasource","datasource_id","datasource_type","slice_id","form_data_key","permalink_key","viz_type","dashboard_id","EXPLORE_URL_PATH_PARAMS","p","table","getParsedExploreURLSearchParams","search","urlSearchParams","URLSearchParams","from","acc","currentParam","paramValue","get","parsedParamValue","TooltipContent","cachedTimestamp","cachedText","t","moment","fromNow","className","onClick","hovered","setHovered","useState","labelType","Tooltip","title","id","Label","type","onMouseOver","onMouseOut","TimerLabel","styled","theme","typography","families","monospace","Timer","endTime","isRunning","startTime","status","clockStr","setClockStr","timer","useRef","useEffect","stopTimer","current","clearInterval","undefined","setInterval","endDttm","now","fDuration","role","CHART_STATUS_MAP","ChartPills","forwardRef","ref","queriesResponse","chartStatus","chartUpdateStartTime","chartUpdateEndTime","refreshCachedQuery","rowLimit","isLoading","firstQueryResponse","css","gridUnit","RowCountLabel","rowcount","Number","limit","is_cached","CachedLabel","cached_dttm","AlertContainer","colors","info","base","light2","dark2","sizes","m","dark1","alert","ButtonContainer","Title","weights","bold","typeChart","warning","danger","ExploreAlert","bodyText","primaryButtonAction","secondaryButtonAction","primaryButtonText","secondaryButtonText","Button","buttonStyle","buttonSize","propTypes","actions","PropTypes","onQuery","can_overwrite","can_download","dashboardId","column_formats","containerId","isStarred","slice","sliceName","table_name","vizType","ownState","standalone","force","timeout","chartIsStale","chart","chartPropShape","errorMessage","triggerRender","GUTTER_SIZE_FACTOR","INITIAL_SIZES","MIN_SIZES","Styles","grayscale","showSplite","ExploreChartPanel","chartAlert","useTheme","gutterMargin","gutterHeight","width","chartPanelWidth","height","chartPanelHeight","chartPanelRef","useResizeDetector","refreshMode","refreshRate","splitSizes","setSplitSizes","isFeatureEnabled","FeatureFlag","getItem","LocalStorageKeys","setShowSplit","showDatasetModal","setShowDatasetModal","metaDataRegistry","getChartMetadataRegistry","useLegacyApi","vizTypeNeedsDataset","DatasourceType","showAlertBanner","ensureIsArray","updateQueryContext","useCallback","async","query_context","queryContext","buildV1ChartDataPayload","resultFormat","resultType","setDataMask","SupersetClient","endpoint","headers","body","stringify","query_context_generation","setItem","onDragEnd","setForceQuery","postChartFormData","updateQueryFormData","onCollapseChange","isOpen","renderChart","ChartContainer","Math","floor","annotationData","chartStackTrace","chartId","latestQueryFormData","setControlValue","triggerQuery","panelBody","useMemo","Alert","message","description","tabIndex","getChartRequiredFieldsMissingMessage","row_limit","standaloneChartBody","queryFormData","setQueryFormData","elementStyle","dimension","elementSize","gutterSize","standaloneClass","bodyClasses","document","minSize","direction","expandToMin","DataTablesPane","queryForce","SaveDatasetModal","visible","onHide","buttonTextOnSave","buttonTextOnOverwrite","getDatasourceAsSaveableDataset","openWindow","RunQueryButton","loading","onStop","isNewChart","canStopQuery","disabled","confirm","Modal","iconStyles","actionButtonsContainerStyles","rgba","light5","opacity","mediumLight","ControlPanelsTabs","Tabs","fullWidth","light3","s","sectionsToExpand","sections","section","expanded","label","isTimeSection","columns","some","c","is_dttm","hasTimeColumn","useResetOnChangeRef","initialValue","resetOnChangeValue","prevResetOnChangeValue","props","pluginContext","useContext","PluginContext","prevState","usePrevious","exploreState","prevDatasource","prevChartStatus","showDatasourceAlert","setShowDatasourceAlert","containerRef","controlsTransferred","useSelector","state","explore","defaultTimeFilter","common","conf","DEFAULT_TIME_FILTER","x_axis","adhoc_filters","previousXAxis","isTemporalColumn","find","filter","expressionType","operator","Operators","subject","content","onOk","clause","comparator","NO_TIME_RANGE","shouldUpdateControls","removeDatasourceWarningFromControl","isDefined","datasourceWarning","controlName","controls","alteredControls","scrollTo","expandedQuerySections","expandedCustomizeSections","querySections","customizeSections","datasourceType","getSectionsToRender","tabOverride","controlSetRows","rows","control","config","renderTrigger","getState","resetTransferredControls","default","handleClearFormClick","handleContinueClick","shouldRecalculateControlState","Boolean","shouldMapStateToProps","sectionHasHadNoErrors","renderControlPanelSection","sectionId","hasErrors","validationErrors","errorColor","error","Collapse","header","Icons","controlSets","renderedControls","controlItem","React","visibility","controlData","mapStateToProps","baseLabel","baseDescription","restProps","isVisible","canDelete","valueToBeDeleted","isTemporalRange","time_range","Control","renderControl","x","ControlRow","hasControlsTransferred","DatasourceAlert","dataTabHasHadNoErrors","dataTabTitle","placement","getChartControlPanelRegistry","Loading","showCustomizeTab","allowOverflow","tab","defaultActiveKey","expandIconPosition","ghost","SK_DASHBOARD_ID","StyledModal","SaveModal","constructor","super","handleDatasetNameChange","e","this","setState","datasetName","target","renderSaveChartModal","dashboardSelectValue","saveToDashboardId","newDashboardName","Form","layout","onClose","removeAlert","Radio","canOverwriteSlice","checked","action","onChange","changeAction","required","Input","placeholder","newSliceName","onSliceNameChange","InfoTooltipWithTrigger","tooltip","allowClear","allowNewOptions","ariaLabel","dashboards","onDashboardSelectChange","renderFooter","saveOrOverwrite","isNewDashboard","bind","owners","userId","is_managed_externally","componentDidMount","fetchDashboards","then","dashboardIds","dashboard","lastDashboard","sessionStorage","recentDashboard","parseInt","indexOf","event","selected","dispatch","setSaveChartModalVisibility","gotodash","removeSaveModalAlert","schema","sql","database","templateParams","saveDataset","datasourceName","sliceDashboards","getSliceDashboards","url_params","createDashboard","getDashboard","setFormData","updateSlice","dashboard_title","new","createSlice","removeItem","history","url","searchParams","window","location","set","delete","toString","render","show","footer","position","withRouter","connect","saveModal","user","saveModalAlert","DatasourceItemContainer","DatasourcePanelDragOption","labelRef","showTooltip","isDragging","drag","useDrag","collect","monitor","optionProps","showType","DndItemType","column","metric","enableExploreDnd","primary","DatasourceContainer","light1","LabelWrapper","light4","SectionHeader","StyledInfoboxWrapper","LabelContainer","extendedProps","children","DataSourcePanel","datasourceControl","shouldForceUpdate","_columns","metrics","col1","col2","showSaveDatasetModal","setShowSaveDatasetModal","inputValue","setInputValue","lists","setList","showAllMetrics","setShowAllMetrics","showAllColumns","setShowAllColumns","expression","is_certified","FAST_DEBOUNCE","metricSlice","columnSlice","saveableDatasets","query","saved_query","datasourceIsSaveable","mainBody","evt","closable","metric_name","col","column_name","memoizedControls","memoize","controlPanel","controlsMap","controlPanelSections","isControlPanelSectionConfig","row","origFormData","currentFormData","StyledLabel","alterForComparison","AlteredSliceTag","diffs","getDiffs","getControlsForVizType","getRowsFromDiffs","hasDiffs","UNSAFE_componentWillReceiveProps","newProps","entries","diff","before","formatValue","after","ofd","sanitizeFormData","cfd","fdKeys","fdKey","isEqualish","val1","val2","v","filterVal","safeStringify","formattedValue","renderModalBody","accessor","Header","TableView","data","pageSize","columnsForWrapText","renderTriggerNode","ModalTrigger","triggerNode","modalTitle","modalBody","responsive","canOverwrite","canDownload","saveDisabled","saveButtonStyles","additionalItemsStyles","ExploreChartHeader","metadata","useDispatch","sliceFormData","isPropertiesModalOpen","setIsPropertiesModalOpen","d","response","json","json_metadata","sharedLabelColors","shared_label_colors","customLabelColors","label_colors","mergedLabelColors","categoricalNamespace","CategoricalColorNamespace","getNamespace","setColor","color_scheme","logging","updateCategoricalNamespace","showModal","sliceUpdated","menu","isDropdownVisible","setIsDropdownVisible","useExploreAdditionalActionsMenu","redirectSQLLab","metadataBar","MetadataType","tn","changed_on_humanized","modifiedBy","changed_by","createdBy","created_by","createdOn","created_on_humanized","MetadataBar","tooltipPlacement","oldSliceName","slice_name","PageHeaderWithActions","editableTitleProps","canEdit","onSave","updateChartTitle","showTitlePanelItems","certificatiedBadgeProps","certifiedBy","certified_by","details","certification_details","showFaveStar","faveStarProps","itemId","fetchFaveStar","saveFaveStar","titlePanelAdditionalItems","chartTitle","rightPanelAdditionalItems","iconSize","additionalActionsMenu","menuDropdownProps","onVisibleChange","PropertiesModal","isDatasourceMetaLoading","forcedHeight","impressionId","saveAction","isSaveModalVisible","ExploreContainer","ExplorePanelContainer","updateHistory","datasourceId","isReplace","tabId","payload","params","additionalParam","fromEntries","URL_PARAMS","urlParams","RESERVED_CHART_URL_PARAMS","stateModifier","postFormData","getUrlParam","putFormData","pathname","mountExploreUrl","ExploreViewContainer","dynamicPlugin","usePluginContext","dynamicPlugins","isDynamicPluginLoading","mounting","wasDynamicPluginLoading","previousControls","lastQueriedControls","setLastQueriedControls","isCollapsed","setIsCollapsed","setShouldForceUpdate","useTabId","defaultSidebarsWidth","controls_width","datasource_width","addHistory","handlePopstate","setExploreControls","handleKeydown","ctrlKey","metaKey","isEnter","keyCode","isS","saveSlice","add_to_dash","goto_dash","slice_url","toggleCollapse","useComponentDidMount","logEvent","LOG_ACTIONS_MOUNT_EXPLORER","useChangeEffect","previous","previousHandlePopstate","removeEventListener","addEventListener","previousHandleKeyDown","dynamicPluginControlsReady","reRenderChart","controlsChanged","newQueryFormData","getFormDataFromControls","renderTriggered","Date","getTime","fetchDatasourceMetadata","displayControlsChanged","areObjectsEqual","ignoreFields","dontRefreshOnChange","setSaveAction","LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS","controlsWithErrors","errorMessages","errors","Set","flat","labels","style","textAlign","renderChartContainer","getSidebarWidths","setSidebarWidths","newDimension","reports","styles","onResizeStop","defaultSize","minWidth","maxWidth","enable","right","iconColor","queryController","abort","can_add","cx","addDangerToast","charts","dataMask","extra_form_data","mergeExtraFormData","isNaN","SUPERSET_WEBSERVER_TIMEOUT","exploreActions","datasourcesActions","saveModalActions","chartActions","logActions","bindActionCreators","withToasts","fallbackExploreInitialData","dataset","column_format","verbose_map","main_dttm_col","datasource_name","simpleFilterToAdhoc","filterClause","toUpperCase","op","val","isExtra","assign","filterOptionName","random","substring","applyTimeRangeFilters","dashboardFormData","adhocFilters","extraFormData","ExplorePage","isLoaded","setIsLoaded","isExploreInitialized","useLocation","exploreUrlParams","re","pathGroups","entry","getParsedExploreURLParams","dashboardContextFormData","dashboardContext","pageId","sliceId","labelColors","colorScheme","chartConfiguration","nativeFilters","filterBoxFilters","dashboardContextWithFilters","getFormDataWithExtraFilters","filters","getAppliedFilterValues","allSliceIds","extraControls","getDashboardContextFormData","rv","makeApi","method","isValidResult","responseError","Error","err","clientError","getClientErrorObject","fetchExploreData","exploreFormData","filterBoxData","dateColumns","__time_range","__time_col","__time_grain","__granularity","appliedTimeExtras","extra_filters","adhocFilter","applied_time_extras","mergeFilterBoxToFormData","nativeFiltersData","EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS","srcKey","targetKey","time_grain_sqla","granularity_sqla","extras","EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS","appendFilters","extraFilter","mergeNativeFiltersToFormData","existingFilter","isFreeFormAdhocFilter","sqlExpression","isSimpleAdhocFilter","isEqual","getFormDataWithDashboardContext","hydrateExplore","catch","finally","getSharedLabelColor","source","SharedLabelColorSource"],"sourceRoot":""}