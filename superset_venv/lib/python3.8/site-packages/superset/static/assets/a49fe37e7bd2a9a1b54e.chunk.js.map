{"version":3,"file":"a49fe37e7bd2a9a1b54e.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/Treemap/EchartsTreemap.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DataRecordValue,\n  BinaryQueryObjectFilterClause,\n} from '@superset-ui/core';\nimport React, { useCallback } from 'react';\nimport Echart from '../components/Echart';\nimport { NULL_STRING } from '../constants';\nimport { EventHandlers } from '../types';\nimport { extractTreePathInfo } from './constants';\nimport { TreemapTransformedProps } from './types';\n\nexport default function EchartsTreemap({\n  echartOptions,\n  emitCrossFilters,\n  groupby,\n  height,\n  labelMap,\n  onContextMenu,\n  refs,\n  setDataMask,\n  selectedValues,\n  width,\n}: TreemapTransformedProps) {\n  const handleChange = useCallback(\n    (values: string[]) => {\n      if (!emitCrossFilters) {\n        return;\n      }\n\n      const groupbyValues = values.map(value => labelMap[value]);\n\n      setDataMask({\n        extraFormData: {\n          filters:\n            values.length === 0\n              ? []\n              : groupby.map((col, idx) => {\n                  const val: DataRecordValue[] = groupbyValues.map(v => v[idx]);\n                  if (val === null || val === undefined)\n                    return {\n                      col,\n                      op: 'IS NULL',\n                    };\n                  return {\n                    col,\n                    op: 'IN',\n                    val: val as (string | number | boolean)[],\n                  };\n                }),\n        },\n        filterState: {\n          value: groupbyValues.length ? groupbyValues : null,\n          selectedValues: values.length ? values : null,\n        },\n      });\n    },\n    [groupby, labelMap, setDataMask, selectedValues],\n  );\n\n  const eventHandlers: EventHandlers = {\n    click: props => {\n      const { data, treePathInfo } = props;\n      // do nothing when clicking on the parent node\n      if (data?.children) {\n        return;\n      }\n      const { treePath } = extractTreePathInfo(treePathInfo);\n      const name = treePath.join(',');\n      const values = Object.values(selectedValues);\n      if (values.includes(name)) {\n        handleChange(values.filter(v => v !== name));\n      } else {\n        handleChange([name]);\n      }\n    },\n    contextmenu: eventParams => {\n      if (onContextMenu) {\n        eventParams.event.stop();\n        const { treePath } = extractTreePathInfo(eventParams.treePathInfo);\n        if (treePath.length > 0) {\n          const pointerEvent = eventParams.event.event;\n          const filters: BinaryQueryObjectFilterClause[] = [];\n          treePath.forEach((path, i) =>\n            filters.push({\n              col: groupby[i],\n              op: '==',\n              val: path === 'null' ? NULL_STRING : path,\n              formattedVal: path,\n            }),\n          );\n          onContextMenu(pointerEvent.clientX, pointerEvent.clientY, filters);\n        }\n      }\n    },\n  };\n\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n      eventHandlers={eventHandlers}\n      selectedValues={selectedValues}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n} from 'react';\nimport { styled } from '@superset-ui/core';\nimport { ECharts, init } from 'echarts';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: React.Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<ECharts>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["EchartsTreemap","echartOptions","emitCrossFilters","groupby","height","labelMap","onContextMenu","refs","setDataMask","selectedValues","width","handleChange","useCallback","values","groupbyValues","map","value","extraFormData","filters","length","col","idx","val","v","op","filterState","eventHandlers","click","props","data","treePathInfo","children","treePath","extractTreePathInfo","name","join","Object","filter","contextmenu","eventParams","event","stop","pointerEvent","forEach","path","i","push","NULL_STRING","formattedVal","clientX","clientY","Styles","styled","Echart","ref","zrEventHandlers","divRef","useRef","chartRef","currentSelection","useMemo","keys","previousSelection","useImperativeHandle","getEchartInstance","current","useEffect","init","entries","handler","off","on","getZr","setOption","dispatchAction","type","dataIndex","handleSizeChange","resize","dispose","useLayoutEffect","forwardRef"],"sourceRoot":""}