{"version":3,"file":"cf7d7936f669132f7057.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/Sunburst/EchartsSunburst.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback } from 'react';\nimport { BinaryQueryObjectFilterClause } from '@superset-ui/core';\nimport { SunburstTransformedProps } from './types';\nimport Echart from '../components/Echart';\nimport { EventHandlers, TreePathInfo } from '../types';\n\nexport const extractTreePathInfo = (treePathInfo: TreePathInfo[] | undefined) =>\n  (treePathInfo ?? [])\n    .map(pathInfo => pathInfo?.name || '')\n    .filter(path => path !== '');\n\nexport default function EchartsSunburst(props: SunburstTransformedProps) {\n  const {\n    height,\n    width,\n    echartOptions,\n    setDataMask,\n    labelMap,\n    selectedValues,\n    formData,\n    onContextMenu,\n    refs,\n    emitCrossFilters,\n  } = props;\n\n  const { columns } = formData;\n\n  const handleChange = useCallback(\n    (values: string[]) => {\n      if (!emitCrossFilters) {\n        return;\n      }\n\n      const labels = values.map(value => labelMap[value]);\n\n      setDataMask({\n        extraFormData: {\n          filters:\n            values.length === 0 || !columns\n              ? []\n              : columns.map((col, idx) => {\n                  const val = labels.map(v => v[idx]);\n                  if (val === null || val === undefined)\n                    return {\n                      col,\n                      op: 'IS NULL',\n                    };\n                  return {\n                    col,\n                    op: 'IN',\n                    val: val as (string | number | boolean)[],\n                  };\n                }),\n        },\n        filterState: {\n          value: labels.length ? labels : null,\n          selectedValues: values.length ? values : null,\n        },\n      });\n    },\n    [emitCrossFilters, setDataMask, columns, labelMap],\n  );\n\n  const eventHandlers: EventHandlers = {\n    click: props => {\n      const { treePathInfo } = props;\n      const treePath = extractTreePathInfo(treePathInfo);\n      const name = treePath.join(',');\n      const values = Object.values(selectedValues);\n      if (values.includes(name)) {\n        handleChange(values.filter(v => v !== name));\n      } else {\n        handleChange([name]);\n      }\n    },\n    contextmenu: eventParams => {\n      if (onContextMenu) {\n        eventParams.event.stop();\n        const { data } = eventParams;\n        const { records } = data;\n        const treePath = extractTreePathInfo(eventParams.treePathInfo);\n        const pointerEvent = eventParams.event.event;\n        const filters: BinaryQueryObjectFilterClause[] = [];\n        if (columns?.length) {\n          treePath.forEach((path, i) =>\n            filters.push({\n              col: columns[i],\n              op: '==',\n              val: records[i],\n              formattedVal: path,\n            }),\n          );\n        }\n        onContextMenu(pointerEvent.clientX, pointerEvent.clientY, filters);\n      }\n    },\n  };\n\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n      eventHandlers={eventHandlers}\n      selectedValues={selectedValues}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n} from 'react';\nimport { styled } from '@superset-ui/core';\nimport { ECharts, init } from 'echarts';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: React.Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<ECharts>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["extractTreePathInfo","treePathInfo","map","pathInfo","name","filter","path","EchartsSunburst","props","height","width","echartOptions","setDataMask","labelMap","selectedValues","formData","onContextMenu","refs","emitCrossFilters","columns","handleChange","useCallback","values","labels","value","extraFormData","filters","length","col","idx","val","v","op","filterState","eventHandlers","click","join","Object","contextmenu","eventParams","event","stop","data","records","treePath","pointerEvent","forEach","i","push","formattedVal","clientX","clientY","Styles","styled","Echart","ref","zrEventHandlers","divRef","useRef","chartRef","currentSelection","useMemo","keys","previousSelection","useImperativeHandle","getEchartInstance","current","useEffect","init","entries","handler","off","on","getZr","setOption","dispatchAction","type","dataIndex","handleSizeChange","resize","dispose","useLayoutEffect","forwardRef"],"sourceRoot":""}